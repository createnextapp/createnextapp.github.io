{"version":3,"sources":["webpack:///./src/images/react-hook-form-native-demo-video.mp4","webpack:///./src/components/FormFields.module.css","webpack:///./src/components/Header.tsx","webpack:///./src/components/HomePage.tsx","webpack:///./src/components/FormFields.tsx","webpack:///./src/components/Form.tsx","webpack:///./src/images/react-hook-form-demo-video.mp4"],"names":["module","exports","LogoSvg","d","style","transform","Header","homeRef","defaultLang","React","isWeb","setIsWeb","language","useStateMachine","state","currentLanguage","play","className","styles","head","id","sequenceIndex","duration","start","opacity","end","easeType","render","logo","viewBox","typographyStyles","heading","logoHeading","desktopLogo","subHeading","marginBottom","maxWidth","home","slogan","buttonStyles","buttonsGroup","minWidth","primaryButton","onClick","current","scrollIntoView","behavior","demo","navigate","translateLink","getStarted","videoHeading","videoWrapperShow","videoWrapperHide","position","delay","video","aria-labelledby","controls","playsInline","muted","src","type","nativeVideo","textAlign","toggleGroup","role","aria-label","aria-selected","aria-controls","disabled","useState","useRef","useEffect","options","rootMargin","threshold","location","submitData","updateSubmitData","showBuilder","toggleBuilder","HomeRef","isPlayFeature","setFeaturePlay","isPlayCodeCompare","setCodeComparePlay","isIsolatePlay","setIsolatePlay","isCardPlay","isPlayRender","setRenderPlay","formUpdated","setFormUpdated","search","startsWith","setTimeout","IntersectionObserver","featureList","document","querySelector","codeComparison","rendering","isolate","observer","entries","forEach","entry","isIntersecting","target","observe","disconnect","root","FeaturesList","CodeCompareSection","IsolateRender","CodePerfCompareSection","ref","Form","onSubmit","data","containerStyles","centerContent","h1","findInteresting","description","Footer","errorStyle","border","colors","secondary","background","errorPink","borderLeft","lightPink","FormFields","formData","errors","register","map","field","name","required","key","value","split","filter","Boolean","option","placeholder","maxLength","minLength","radioGroup","color","autoComplete","pattern","RegExp","max","min","animationProps","methods","devTool","useForm","mode","handleSubmit","watch","formState","reset","touched","Object","keys","generic","liveDemo","note","wrapper","demoForm","title","example","pinkButton","submit","fontSize","margin","darkButton","goToBuilder","edit","watchTitle","length","code","JSON","stringify","errorTitle","error","reduce","previous","rest","touchedTitle"],"mappings":"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","file":"8388f798fa361e6622feda3addccc6af7aebdd07-da2101c707290276af51.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/react-hook-form-native-demo-video-cf29e6bfa4bc6fe1f406f1ceaa1b59ac.mp4\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioGroup\":\"FormFields-module--radioGroup--3idzI\"};","import * as React from \"react\"\nimport { Animate, AnimateGroup } from \"react-simple-animate\"\nimport { navigate } from \"@reach/router\"\nimport Bday from \"./Bday\"\n// @ts-ignore\nimport video from \"../images/react-hook-form-demo-video.mp4\"\n// @ts-ignore\nimport nativeVideo from \"../images/react-hook-form-native-demo-video.mp4\"\nimport home from \"../data/home\"\nimport { useStateMachine } from \"little-state-machine\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./Header.module.css\"\n\nconst LogoSvg = (\n  <>\n    <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n  </>\n)\n\nexport default function Header({\n  homeRef,\n  defaultLang,\n}: // isCardPlay,\n{\n  homeRef: React.Ref<HTMLDivElement>\n  defaultLang: string\n  // isCardPlay: boolean\n}) {\n  const [isWeb, setIsWeb] = React.useState(true)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  return (\n    <>\n      <AnimateGroup play>\n        <header className={styles.head} id=\"main\">\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <svg className={styles.logo} style={style} viewBox=\"0 0 100 100\">\n                {LogoSvg}\n              </svg>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <h1\n                className={`${typographyStyles.heading} ${styles.logoHeading}`}\n                style={style}\n              >\n                <svg className={styles.desktopLogo} viewBox=\"0 0 100 100\">\n                  {LogoSvg}\n                </svg>{\" \"}\n                React Hook Form\n              </h1>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={1}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <p\n                className={typographyStyles.subHeading}\n                style={{ marginBottom: 0, maxWidth: 660, ...style }}\n              >\n                {home.slogan[currentLanguage]}\n              </p>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <div\n                className={buttonStyles.buttonsGroup}\n                style={{\n                  ...style,\n                  minWidth: 300,\n                }}\n              >\n                <button\n                  className={buttonStyles.primaryButton}\n                  onClick={() => {\n                    // @ts-ignore\n                    homeRef.current.scrollIntoView({ behavior: \"smooth\" })\n                  }}\n                >\n                  {home.demo[currentLanguage]}\n                </button>\n\n                <button\n                  className={buttonStyles.primaryButton}\n                  onClick={() => {\n                    navigate(translateLink(\"get-started\", currentLanguage))\n                  }}\n                >\n                  {home.getStarted[currentLanguage]} &nbsp;<span>▶</span>\n                </button>\n              </div>\n            )}\n          />\n        </header>\n\n        <h4 className={styles.videoHeading}>React Web</h4>\n        <div\n          className={isWeb ? styles.videoWrapperShow : styles.videoWrapperHide}\n        >\n          <div style={{ position: \"relative\" }}>\n            <Animate\n              sequenceIndex={3}\n              delay={0.1}\n              start={{ opacity: 0 }}\n              end={{ opacity: 1 }}\n              duration={0.4}\n              easeType=\"ease-in\"\n              render={({ style }) => (\n                <video\n                  className={styles.video}\n                  id=\"tabPanel-1\"\n                  aria-labelledby=\"tabPanel-1\"\n                  controls\n                  playsInline\n                  muted\n                  style={style}\n                >\n                  <source src={video} type=\"video/mp4\" />\n                </video>\n              )}\n            />\n          </div>\n        </div>\n\n        <div\n          className={isWeb ? styles.videoWrapperHide : styles.videoWrapperShow}\n        >\n          <h4 className={styles.videoHeading}>React Native</h4>\n          <video\n            className={styles.video}\n            id=\"tabPanel-2\"\n            aria-labelledby=\"tabPanel-2\"\n            controls\n            playsInline\n            muted\n          >\n            <source src={nativeVideo} type=\"video/mp4\" />\n          </video>\n        </div>\n\n        <div\n          style={{\n            textAlign: \"center\",\n          }}\n        >\n          <div\n            className={styles.toggleGroup}\n            role=\"tablist\"\n            aria-label=\"Select video\"\n          >\n            <button\n              aria-label=\"show web video\"\n              aria-selected={isWeb ? \"true\" : \"false\"}\n              aria-controls=\"tabPanel-1\"\n              role=\"tab\"\n              disabled={isWeb}\n              onClick={() => {\n                setIsWeb(true)\n              }}\n            >\n              React Web\n            </button>\n            <button\n              disabled={!isWeb}\n              role=\"tab\"\n              aria-label=\"show react native video\"\n              aria-selected={!isWeb}\n              aria-controls=\"tabPanel-2\"\n              onClick={() => {\n                setIsWeb(false)\n              }}\n            >\n              React Native\n            </button>\n          </div>\n        </div>\n      </AnimateGroup>\n\n      {/*<Bday isCardPlay={isCardPlay} />*/}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport { navigate } from \"@reach/router\"\nimport Form from \"./Form\"\nimport Header from \"./Header\"\nimport CodeCompareSection from \"./CodeCompareSection\"\nimport CodePerfCompareSection from \"./CodePerfCompareSection\"\nimport IsolateRender from \"./IsolateRender\"\nimport FooterContent from \"./Footer\"\nimport Builder from \"./BuilderPage\"\nimport FeaturesList from \"./FeaturesList\"\nimport { useStateMachine } from \"little-state-machine\"\nimport home from \"../data/home\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./HomePage.module.css\"\n\nconst { useState, useRef, useEffect } = React\n\nconst options = {\n  rootMargin: \"0px 0px\",\n  threshold: [1],\n}\n\nfunction HomePage({\n  location,\n  defaultLang,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n  defaultLang: string\n}) {\n  const [submitData, updateSubmitData] = useState({})\n  const [showBuilder, toggleBuilder] = useState(false)\n  const HomeRef = useRef(null)\n  const [isPlayFeature, setFeaturePlay] = useState(false)\n  const [isPlayCodeCompare, setCodeComparePlay] = useState(false)\n  const [isIsolatePlay, setIsolatePlay] = useState(false)\n  const [isCardPlay, setCardPlay] = useState(false)\n  const [isPlayRender, setRenderPlay] = useState(false)\n  const [formUpdated, setFormUpdated] = useState(false)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  const onSubmit = (data) => {\n    updateSubmitData(data)\n  }\n\n  useEffect(() => {\n    if (location.search.startsWith(\"?goToDemo\")) {\n      setTimeout(() => {\n        HomeRef.current.scrollIntoView({ behavior: \"smooth\" })\n\n        if (location.search.startsWith(\"?goToDemo&updated=true\")) {\n          setFormUpdated(true)\n        }\n      }, 100)\n    }\n\n    if (!IntersectionObserver) {\n      setFeaturePlay(true)\n      setCodeComparePlay(true)\n    }\n\n    const featureList = document.querySelector(\"#featureLast\")\n    const codeComparison = document.querySelector(\"#codeComparison\")\n    const rendering = document.querySelector(\"#rendering\")\n    const isolate = document.querySelector(\"#isolate\")\n    const card = document.querySelector(\"#card\")\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target === featureList && !isPlayFeature) {\n            setFeaturePlay(true)\n          }\n          if (entry.target === codeComparison && !isPlayCodeCompare) {\n            setCodeComparePlay(true)\n          }\n          if (entry.target === rendering && !isPlayRender) {\n            setRenderPlay(true)\n          }\n          if (entry.target === isolate && !isIsolatePlay) {\n            setIsolatePlay(true)\n          }\n          // if (entry.target === card && !isCardPlay) {\n          //   setCardPlay(true)\n          // }\n        }\n      })\n    }, options)\n\n    observer.observe(featureList)\n    observer.observe(codeComparison)\n    observer.observe(rendering)\n    observer.observe(isolate)\n    // observer.observe(card)\n\n    return () => observer.disconnect()\n  }, [])\n\n  return (\n    <div className={styles.root}>\n      {showBuilder && (\n        <Builder\n          showBuilder\n          toggleBuilder={toggleBuilder}\n          HomeRef={HomeRef}\n          defaultLang={defaultLang}\n        />\n      )}\n\n      <Header\n        isCardPlay={isCardPlay}\n        homeRef={HomeRef}\n        defaultLang={defaultLang}\n      />\n\n      <FeaturesList\n        isPlayFeature={isPlayFeature}\n        currentLanguage={currentLanguage}\n      />\n\n      <CodeCompareSection\n        isPlayCodeCompare={isPlayCodeCompare}\n        currentLanguage={currentLanguage}\n      />\n\n      <IsolateRender\n        isIsolatePlay={isIsolatePlay}\n        currentLanguage={currentLanguage}\n      />\n\n      <CodePerfCompareSection\n        isPlayRender={isPlayRender}\n        currentLanguage={currentLanguage}\n      />\n\n      <div ref={HomeRef} />\n\n      <Form\n        {...{\n          onSubmit,\n          submitData,\n          toggleBuilder,\n          formUpdated,\n          currentLanguage,\n        }}\n      />\n\n      <section className={containerStyles.centerContent}>\n        <h1 className={typographyStyles.h1}>\n          {home.findInteresting[currentLanguage].heading}\n        </h1>\n        <p>{home.findInteresting[currentLanguage].description}</p>\n        <div\n          className={buttonStyles.buttonsGroup}\n          style={{\n            maxWidth: 500,\n          }}\n        >\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"get-started\", currentLanguage))\n            }}\n          >\n            {home.getStarted[currentLanguage]}\n          </button>\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"api\", currentLanguage))\n            }}\n          >\n            API\n          </button>\n        </div>\n      </section>\n\n      <FooterContent currentLanguage={currentLanguage} />\n    </div>\n  )\n}\n\nexport default React.memo(HomePage)\n","import * as React from \"react\"\nimport colors from \"../styles/colors\"\nimport styles from \"./FormFields.module.css\"\n\nconst errorStyle = {\n  border: `1px solid ${colors.secondary}`,\n  background: colors.errorPink,\n  borderLeft: `10px solid ${colors.lightPink}`,\n}\n\nconst FormFields = ({ formData, errors, register }) => {\n  return (formData || []).map((field) => {\n    switch (field.type) {\n      case \"select\":\n        return (\n          <select\n            aria-label={field.name}\n            name={field.name}\n            ref={register({ required: field.required })}\n            key={field.name}\n            style={{\n              marginBottom: 20,\n              ...(errors[field.name] ? errorStyle : null),\n            }}\n          >\n            <option value=\"\">Select...</option>\n            {field.options &&\n              field.options\n                .split(\";\")\n                .filter(Boolean)\n                .map((option) => {\n                  return <option key={option}>{option}</option>\n                })}\n          </select>\n        )\n      case \"textarea\":\n        return (\n          <textarea\n            aria-label={field.name}\n            name={field.name}\n            placeholder={field.name}\n            ref={register({\n              required: field.required,\n              ...(field.maxLength ? { maxLength: field.maxLength } : null),\n              ...(field.minLength ? { minLength: field.minLength } : null),\n            })}\n            key={field.name}\n            style={{\n              marginBottom: 20,\n              ...(errors[field.name] ? errorStyle : null),\n            }}\n          />\n        )\n      case \"radio\":\n        return (\n          <div\n            className={styles.radioGroup}\n            key={field.name}\n            style={{ marginBottom: 20 }}\n            aria-label={field.name}\n          >\n            {field.options &&\n              field.options\n                .split(\";\")\n                .filter(Boolean)\n                .map((name) => (\n                  <label\n                    key={name}\n                    style={{\n                      ...(errors[field.name]\n                        ? { color: colors.lightPink }\n                        : null),\n                    }}\n                  >\n                    {name}\n                    &nbsp;\n                    <input\n                      type=\"radio\"\n                      name={field.name}\n                      value={name}\n                      ref={register({ required: field.required })}\n                    />\n                  </label>\n                ))}\n          </div>\n        )\n      default:\n        return (\n          <input\n            style={{\n              marginBottom: 20,\n              ...(errors[field.name] ? errorStyle : null),\n            }}\n            aria-label={field.name}\n            autoComplete=\"off\"\n            key={field.name}\n            type={field.type}\n            name={field.name}\n            placeholder={field.name}\n            ref={register({\n              required: field.required,\n              ...(field.pattern\n                ? { pattern: new RegExp(field.pattern) }\n                : null),\n              ...(field.max ? { max: field.max } : null),\n              ...(field.min ? { min: field.min } : null),\n              ...(field.maxLength ? { maxLength: field.maxLength } : null),\n              ...(field.minLength ? { minLength: field.minLength } : null),\n            })}\n          />\n        )\n    }\n  })\n}\n\nexport default FormFields\n","import * as React from \"react\"\nimport { Animate } from \"react-simple-animate\"\nimport { useStateMachine } from \"little-state-machine\"\nimport FormFields from \"./FormFields\"\nimport goToBuilder from \"./utils/goToBuilder\"\nimport { useForm } from \"react-hook-form\"\nimport home from \"../data/home\"\nimport generic from \"../data/generic\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport styles from \"./Form.module.css\"\n\nconst animationProps = {\n  start: {\n    opacity: 0,\n  },\n  end: {\n    opacity: 1,\n  },\n  duration: 0.8,\n}\n\nfunction Form({\n  onSubmit,\n  submitData,\n  toggleBuilder,\n  formUpdated,\n  currentLanguage,\n  methods,\n  devTool,\n}: {\n  onSubmit: any\n  submitData: Object\n  toggleBuilder: (state: boolean) => void\n  formUpdated: boolean\n  currentLanguage: string\n  methods?: any\n  devTool?: boolean\n}) {\n  const { register, errors, handleSubmit, watch, formState, reset } =\n    methods ||\n    useForm({\n      mode: \"onChange\",\n    })\n  const touched = Object.keys(formState.touched)\n  const {\n    state: { formData },\n  } = useStateMachine()\n\n  return (\n    <>\n      {!devTool && (\n        <div className={containerStyles.centerContent}>\n          <h1 className={typographyStyles.h1}>\n            {generic.liveDemo[currentLanguage]}\n          </h1>\n          {formUpdated && (\n            <Animate\n              play={formUpdated}\n              start={{ opacity: 0, transform: \"translateY(20px)\" }}\n              end={{ opacity: 1 }}\n              delay={1.5}\n              render={({ style }) => (\n                <p style={{ marginBottom: 20, ...style }}>\n                  <b className={typographyStyles.note}>Note:</b> your form has\n                  been updated.\n                </p>\n              )}\n            />\n          )}\n          <p>{home.liveDemo[currentLanguage].description}</p>\n        </div>\n      )}\n\n      <div className={styles.wrapper}>\n        <form className={styles.demoForm} onSubmit={handleSubmit(onSubmit)}>\n          <h2 className={typographyStyles.title}>\n            {generic.example[currentLanguage]}\n          </h2>\n\n          <FormFields {...{ formData, errors, register }} />\n\n          <button className={buttonStyles.pinkButton}>\n            {home.liveDemo[currentLanguage].submit}\n          </button>\n\n          {!devTool && (\n            <>\n              <h2\n                className={typographyStyles.title}\n                style={{\n                  fontSize: 14,\n                  maxWidth: \"80%\",\n                  margin: \"0 auto\",\n                }}\n              >\n                or\n              </h2>\n\n              <button\n                className={buttonStyles.darkButton}\n                type=\"button\"\n                onClick={() => {\n                  reset()\n                  toggleBuilder(true)\n                  goToBuilder()\n                }}\n              >\n                {generic.edit[currentLanguage]}\n              </button>\n            </>\n          )}\n        </form>\n\n        {!devTool && (\n          <>\n            <section>\n              <h2 className={typographyStyles.title}>\n                {home.liveDemo[currentLanguage].watchTitle}\n              </h2>\n              <p>ⓘ {home.liveDemo[currentLanguage].watch}</p>\n              <Animate\n                play={Object.keys(watch()).length > 0}\n                {...animationProps}\n                render={({ style }) => (\n                  <pre className={styles.code} style={style}>\n                    {JSON.stringify(watch(), null, 2)}\n                  </pre>\n                )}\n              />\n            </section>\n            <section>\n              <h2 className={typographyStyles.title}>\n                {home.liveDemo[currentLanguage].errorTitle}\n              </h2>\n              <p>ⓘ {home.liveDemo[currentLanguage].error}</p>\n              <Animate {...animationProps} play={!!Object.keys(errors).length}>\n                <pre className={styles.code}>\n                  {Object.keys(errors).length > 0 &&\n                    JSON.stringify(\n                      Object.entries(errors).reduce(\n                        (previous, [key, { ref, ...rest }]) => {\n                          previous[key] = rest\n                          return previous\n                        },\n                        {}\n                      ),\n                      null,\n                      2\n                    )}\n                </pre>\n              </Animate>\n            </section>\n\n            <section>\n              <h2 className={typographyStyles.title}>\n                {home.liveDemo[currentLanguage].touchedTitle}\n              </h2>\n              <p>ⓘ {home.liveDemo[currentLanguage].touched}</p>\n              <Animate\n                play={!!touched.length}\n                {...animationProps}\n                render={({ style }) => (\n                  <pre className={styles.code} style={style}>\n                    {JSON.stringify(touched, null, 2)}\n                  </pre>\n                )}\n              />\n            </section>\n\n            {!!Object.keys(submitData).length && (\n              <section>\n                <h2 className={typographyStyles.title}>\n                  {home.liveDemo[currentLanguage].submit}\n                </h2>\n                <Animate\n                  play={!!Object.keys(submitData).length}\n                  {...animationProps}\n                  render={({ style }) => (\n                    <pre className={styles.code} style={style}>\n                      {Object.keys(submitData).length > 0 &&\n                        JSON.stringify(submitData, null, 2)}\n                    </pre>\n                  )}\n                />\n              </section>\n            )}\n          </>\n        )}\n      </div>\n    </>\n  )\n}\n\nexport default React.memo(Form)\n","module.exports = __webpack_public_path__ + \"static/react-hook-form-demo-video-5dfee1c9d2a8fb5ca19b2724d4b27663.mp4\";"],"sourceRoot":""}