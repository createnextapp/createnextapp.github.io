(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{"09z+":function(e,t,l){"use strict";t.a='import React, { useEffect, useRef } from "react"\nimport { useForm } from "react-hook-form"\n\nexport default function App() {\n  const inputRef = useRef();\n  const { control, handleSubmit, errors } = useForm({});\n\n  useEffect(() => {\n    if (errors.test) {\n      inputRef.current.focus();\n    }\n  });\n\n  return (\n    <form onSubmit={handleSubmit(data => console.log(data))}>\n      <Controller as={<ExternalInput ref={inputRef} />} name="test" control={control} rules={{ required: true }} />\n      <button>Submit</button>\n    </form>\n  );\n}'},"576C":function(e,t,l){"use strict";var n=l("q1tI"),r=l("LuW/"),a=l("09z+"),o=l("T3Co"),c=l("mLYZ"),m=l("G3ap"),u=l.n(m),i=l("fHxr"),s=l.n(i),d=l("9Ruc"),p=l.n(d);t.a={title:"FAQs",header:{title:"FAQs",description:"frequently asked question."},questions:[{title:"Performance of React Hook Form",description:n.createElement("p",null,"Performance is one of the primary goals for building this custom hook. React Hook Form relies on uncontrolled component, hence the reason why the register function occurs at the ref. This approach will reduce the amount of re-rendering occurring due to user typing or value changing. Components mount to the page is much quicker as well because they are not controlled. For mounting speed, I have completed a quick comparison test which you can refer to by"," ",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"this repo link"),".")},{title:"How to create an accessible input error and message?",description:n.createElement("p",null,"React Hook Form is based on"," ",n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"Uncontrolled Component"),", which gives you the ability to build an accessible custom form easily.")},{title:"Does it work with Class Components?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"No, not out of box. but you can build a wrapper around it and use in your Class Component."),n.createElement("blockquote",null,"You can’t use Hooks inside of a class component, but you can definitely mix classes and function components with Hooks in a single tree. Whether a component is a class or a function that uses Hooks is an implementation detail of that component. In the longer term, we expect Hooks to be the primary way people write React components."))},{title:"How to reset the form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"There are two methods to clear the form."),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"This method does the same thing as clicking a form's reset button, and only clears",n.createElement("code",null,"input/select/checkbox")," values.")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Form's ",n.createElement("code",null,"reset")," method will reset all fields value, and also will clear all ",n.createElement("code",null,"errors")," within the form."))))},{title:"How to initialize form values?",description:n.createElement("p",null,"React Hook Form relies on uncontrolled component. With an uncontrolled component, you can specify a ",n.createElement("code",null,"defaultValue")," or"," ",n.createElement("code",null,"defaultChecked")," to an individual field. However, the hook itself does provide an easier way to initialise all input values too. Example below:")},{title:"How to share ref usage?",description:n.createElement("p",null,"React Hook Form needs ",n.createElement("code",null,"ref")," to collect the input value, however, you may want to use ",n.createElement("code",null,"ref")," for other purposes (eg. scroll into the view). The following example will show you how.")},{title:"What if you don't have access to ref?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"You can actually ",n.createElement("code",null,"register")," an input without a"," ",n.createElement("code",null,"ref"),". In fact, you can manually ",n.createElement("code",null,"setValue"),","," ",n.createElement("code",null,"setError")," and ",n.createElement("code",null,"triggerValidation"),"."),n.createElement("p",null,n.createElement("b",{className:u.a.note},"Note:")," Because"," ",n.createElement("code",null,"ref")," has not been registered, React Hook Form won't be able to register event listeners to the inputs. This means you will have to manually update value and error."))},{title:"Browser Support?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form support all major browsers."),n.createElement("p",null,"For legacy IE11 support, you can import react-hook-form IE 11 version."))},{title:"Why is first keystroke is not working?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Double check if you are using ",n.createElement("code",null,"value")," instead of"," ",n.createElement("code",null,"defaultValue"),"."),n.createElement("p",null,"React Hook Form is built based on uncontrolled input, which means you don't need to change input ",n.createElement("code",null,"value")," via"," ",n.createElement("code",null,"state")," by ",n.createElement("code",null,"onChange"),". Hence you don't need"," ",n.createElement("code",null,"value")," at all, in fact, you only need"," ",n.createElement("code",null,"defaultValue")," for initial input value."))},{title:"Testing failed due to MutationObserver?",description:n.createElement("p",null,"If you have difficulty during testing and the issue was caused by"," ",n.createElement("code",null,"MutationObserver"),". Make sure you install"," ",n.createElement("code",null,"mutationobserver")," and import this package in your test"," ",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js file"),".")},{title:"React Hook Form, Formik or Redux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"First of all, all libs try to solve the same problem which is making form building experience easy and great. However, there are some fundamental differences between the three, react-hook-form is built with uncontrolled input in mind and tries to provide your form with best performance and least re-render if possible. On top of that, react-hook-form is built by React Hook and used as hook, which means there is no Component for you to import. Here are some of the detail differences:"),n.createElement("div",{className:s.a.tableWrapper},n.createElement("table",{className:s.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+r.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Component")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"uncontrolled")," ","&"," ",n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Rendering")),n.createElement("td",null,"minimum re-render"),n.createElement("td",null,"re-render according to local state changes which means as you type in the input."),n.createElement("td",null,"re-render according to state management lib (Redux) changes which means as you type in the input.")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Package size")),n.createElement("td",null,"Small",n.createElement("br",null),n.createElement("code",null,"react-hook-form@4.0.0",n.createElement("br",null),n.createElement("b",{className:u.a.note},"6.2KB"))),n.createElement("td",null,"Medium",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:u.a.note},"14.4KB"))),n.createElement("td",null,"Large",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:u.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Validation")),n.createElement("td",null,"Built-in &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build your yourself or Plugins")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Learning curve")),n.createElement("td",null,"Low"),n.createElement("td",null,"Medium"),n.createElement("td",null,"Medium")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Status")),n.createElement("td",null,"Medium Community: New lib and growing"),n.createElement("td",null,"Large Community: Well established form lib in the community"),n.createElement("td",null,"Large Community: Well established form lib in the community"))))))},{title:"Can it work with Controlled component?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Short answer: ",n.createElement("b",null,"Yes")),n.createElement("p",null,"React-hook-form is not recommending you to build form controlled, however you can still achieve that easily."),n.createElement("p",null,"The trick to using ",n.createElement("code",null,"watch")," API to monitor each input's change and assign to value prop."),n.createElement("p",null,"Alternatively, you can use our wrapper component"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller")," ","which take care those custom register for you."))},{title:"Testing React Hook Form",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"Why am I getting ",n.createElement("code",null,"act")," warning?"),n.createElement("p",null,"All validation methods in React Hook Form will be treated as async functions, so it's important to wrap ",n.createElement("code",null,"async")," ","around your"," ",n.createElement("a",{className:p.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act"),".")),n.createElement("li",null,n.createElement("p",null,"Why input change is not firing events?"),n.createElement("p",null,"React Hook Form uses ",n.createElement("code",null,"input")," events for input changes. If you're using ",n.createElement("strong",null,"react-testing-library"),", you can easily switch to ",n.createElement("code",null,"fireEvent.input"),". Here is a testing"," ",n.createElement("a",{className:p.a.codeAsLink,target:"_blank",rel:"noopener noreferrer",href:"https://codesandbox.io/s/react-hook-form-test-s4j7c?from-embed"},"example at codesandbox"),"."),n.createElement("p",null,"If you're using ",n.createElement("strong",null,"enzyme"),", you'll need to manually set the ",n.createElement("code",null,"value")," of your input's DOM node, then dispatch an input event."),n.createElement(c.b,{rawData:'const element = wrapper.find("select[data-testid=\'a\']");\nelement.getDOMNode().value = "foo";\nelement.getDOMNode().dispatchEvent(new Event("input"));'}))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:u.a.note},"watch:")," subscribe to input’s change via event listener and re-render based on which fields that are subscribed. Check out"," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"this codesandbox")," ","for actual behaviour.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:u.a.note},"getValues"),": get value which stored inside the custom hook as reference, fast and cheap. This method doesn’t trigger re-render.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:u.a.note},"local state"),": React local state represent more than just input’s state and also decide what to render. This will trigger on each input’s change."))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form doesn't control your entire form and inputs, which is the reason why React wouldn't recognise the actual input that has been exchanged or swopped. As a solution, you can resolve this problem by giving a unique ",n.createElement("code",null,"key")," prop to your input. You can also read more about the key props from"," ",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"this article written by Kent C. Dodds"),"."),n.createElement(c.b,{rawData:o.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"After a validation error, React Hook Form will automatically focus on the invalids elements of which have their proper ref, like the native inputs (eg: ",n.createElement("code",null,"<input />"),") or some 3rd party Components that correctly export his ref (eg: from MUI"," ",n.createElement("code",null,"<TextField inputRef={register({required: 'Field Required'})} />"),")"),n.createElement("p",null,"However, for some 3rd party controlled Components like"," ",n.createElement("code",null,"<Autocomplete>")," from MUI or ",n.createElement("code",null,"<XX>")," ","from AntD) it's very difficult to predict his ref because the formats changes, so React Hook Form will properly detect the validation error but will not be able to automatically focus that kind of Components."),n.createElement("p",null,"As a workaround, after the validation error, you can manually focus on the 3rd party controlled Component (if you can get the actual internal input ref), for example:"),n.createElement(c.b,{rawData:a.a}),n.createElement("p",null,'If you find difficult to make the autofocus with external controlled component. It is possible to disable the "autofocus on error" feature. Maybe this behavior will bring a better user experience in some cases. ',n.createElement("code",null,"useForm({submitFocusError: false});")))}]}},B8e9:function(e,t,l){"use strict";var n=l("q1tI"),r=l("LuW/"),a=l("G3ap"),o=l.n(a),c=l("9Ruc"),m=l.n(c),u=l("fHxr"),i=l.n(u),s=l("mLYZ"),d=l("09z+"),p=l("T3Co");t.a={title:"자주 묻는 질문",header:{title:"자주 묻는 질문",description:"자주 묻는 질문"},questions:[{title:"React Hook Form 의 퍼포먼스",description:n.createElement("p",null,"이 커스텀 훅을 만들 때 가장 먼저 고려된 목표 중 하나가 퍼포먼스입니다. React Hook Form 은 비제어 컴포넌트를 활용하고 있기 때문에"," ",n.createElement("code",null,"ref")," 에서 ",n.createElement("code",null,"register")," 함수가 실행됩니다. 이러한 접근 방식은 사용자가 타이핑하거나 값을 변경할 때 리랜더링이 일어나는 양을 줄여줄 것입니다. 제어 컴포넌트가 아니기 때문에 페이지에 컴포넌트가 마운트되는 속도도 훨씬 더 빠릅니다. 마운트되는 속도에 대해 여러분이 참고하실 수 있도록 간단한 속도 비교 테스트를"," ",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"이 저장소에")," ","올려 두었습니다.")},{title:"접근성 있는 입력 에러와 메세지를 어떻게 만드나요?",description:n.createElement("p",null,"React Hook Form 은"," ",n.createElement("a",{href:"https://ko.reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"비제어 컴포넌트"),"를 기반으로 하고 있으므로, 접근성이 높은 커스텀 폼을 쉽게 만들 수 있습니다.")},{title:"클래스 컴포넌트와 사용할 수 있나요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"아니오. 사용할 수 없습니다만, 클래스 컴포넌트를 감싸는 래퍼를 만들 수는 있습니다."),n.createElement("blockquote",null,"여러분은 클래스 컴포넌트 안에서 훅을 사용할 수 없습니다. 하지만 확실히 클래스 컴포넌트와 훅을 사용하는 함수 컴포넌트를 같은 트리 안에서 섞어 사용할 수 있습니다. 컴포넌트가 클래스인지, 훅을 사용하는 함수 컴포넌트인지는 개별 컴포넌트의 세부 구현에 불과합니다. 긴 안목으로 보아 우리는 사람들이 훅을 우선적으로 고려하여 리액트 컴포넌트를 작성하길 기대합니다."))},{title:"폼을 어떻게 리셋하나요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"폼을 초기화하는데 두 가지 방법이 있습니다."),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"이 메서드는 폼의 리셋 버튼을 누르는 것과 똑같이 동작하지만, 오로지 ",n.createElement("code",null,"input/select/checkbox")," 값들만 초기화합니다.")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Form 의 ",n.createElement("code",null,"reset")," 메서드는 모든 필드 값을"," ","리셋하며, 또한 폼 안의 모든 ",n.createElement("code",null,"errors")," 를 초기화합니다."))))},{title:"어떻게 폼의 기본값을 설정하나요?",description:n.createElement("p",null,"React Hook Form 은 비제어 컴포넌트를 활용합니다. 비제어 컴포넌트를 사용하면 ",n.createElement("code",null,"defaultValue")," 나 ",n.createElement("code",null,"defaultChecked")," 값을 개별 필드에 넣어 기본값을 설정할 수 있습니다. 하지만 훅에서 기본적으로 손쉽게 모든 인풋의 기본값을 설정할 수 있는 방법을 제공합니다. 아래의 예제를 보세요.")},{title:"ref 를 공유할 수 있나요?",description:n.createElement("p",null,"React Hook Form 은 입력 값을 모으기 위해 ",n.createElement("code",null,"ref")," 를 필요로 합니다. 하지만 ",n.createElement("code",null,"ref")," 를 다른 목적으로 (예: 해당 뷰로 스크롤하기) 활용하고 싶을 수도 있습니다. 아래의 예제로 그 방법을 확인해보세요.")},{title:"만약에 ref 에 접근할 수 없다면 어떻게 하죠?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"사실 ",n.createElement("code",null,"ref")," 없이 ",n.createElement("code",null,"register")," 를 할 수 있습니다. 수동으로 ",n.createElement("code",null,"setValue"),", ",n.createElement("code",null,"setError")," 그리고"," ",n.createElement("code",null,"triggerValidation")," 를 사용하면 됩니다."),n.createElement("p",null,n.createElement("b",{className:o.a.note},"참고:")," ",n.createElement("code",null,"ref")," 가 등록되지 않았기 때문에, React Hook Form 은 인풋에 이벤트 리스너를 등록할 수 없을 겁니다. 따라서 인풋 값과 에러를 수동으로 업데이트 해 주어야 합니다."))},{title:"브라우저 호환성은 어떤가요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form 은 모든 메이저 브라우저를 지원합니다."),n.createElement("p",null,"오래된 IE11 를 지원하려면, react-hook-form IE11 버전을 불러와서 사용할 수 있습니다."))},{title:"왜 첫 번째 키 입력이 동작하지 않을까요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,n.createElement("code",null,"value")," 대신에 ",n.createElement("code",null,"defaultValue")," 를 사용하고 있는지 다시 확인해주세요."),n.createElement("p",null,"React Hook Form 은 비제어 컴포넌트를 활용하기 때문에"," ",n.createElement("code",null,"onChange")," 를 사용하여 ",n.createElement("code",null,"state")," 를 바꾸고, 그 값을 인풋의 ",n.createElement("code",null,"value")," 에 반영해줄 필요가 없습니다. 따라서"," ",n.createElement("code",null,"value")," 자체가 필요 없습니다. 사실 초기 값을 지정하고자 할 때 ",n.createElement("code",null,"defaultValue")," 만 넣어주면 됩니다."))},{title:"MutationObserver 때문에 테스트가 실패하는데요?",description:n.createElement("p",null,"만약에 테스트하는데 어려움을 겪고 계시다면"," ",n.createElement("code",null,"MutationObserver")," 때문입니다."," ",n.createElement("code",null,"mutationobserver-shim")," 패키지를 설치하고"," ",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js 파일"),"에서 불러오세요.")},{title:"React Hook Form 을 Formik, Redux Form 과 비교한다면?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"먼저, 모든 라이브러리들은 폼을 만드는 과정을 쉽고 좋게 만들겠다는 공통의 문제를 해결하려고 합니다. 하지만 세 라이브러리는 약간 근본적인 차이를 가지고 있고, react-hook-form 은 비제어 입력을 기본으로 삼고 있습니다. 그리하여 여러분의 폼이 최대한의 퍼포먼스를 내고 최소한의 리랜더링만 발생하도록 합니다. 그 위에 react-hook-form 은 리액트 훅을 기반으로 만들어졌으며 훅으로 사용됩니다. 따라서 별도의 컴포넌트를 불러올 필요가 없습니다. 아래에 더 자세한 차이점을 표기했습니다."),n.createElement("div",{className:i.a.tableWrapper},n.createElement("table",{className:i.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+r.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"컴포넌트")),n.createElement("td",null,n.createElement("a",null,n.createElement("a",{href:"https://ko.reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"비제어"))),n.createElement("td",null,n.createElement("a",{href:"https://ko.reactjs.org/docs/forms.html",target:"_blank"},"제어")),n.createElement("td",null,n.createElement("a",{href:"https://ko.reactjs.org/docs/forms.html",target:"_blank"},"제어"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"랜더링")),n.createElement("td",null,"최소한의 리랜더링"),n.createElement("td",null,"인풋에 타이핑하면서 지역 상태가 변할떄마다 리랜더링"),n.createElement("td",null,"인풋에 타이핑하면서 상태 관리 라이브러리(Redux)의 상태가 바뀔 때마다 리랜더링")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"훅"),n.createElement("td",null,"컴포넌트 (RenderProps, Form, Field) + 훅"),n.createElement("td",null,"컴포넌트 (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"패키지 크기")),n.createElement("td",null,"작음",n.createElement("br",null),n.createElement("code",null,"react-hook-form@3.26.2",n.createElement("br",null),n.createElement("b",{className:o.a.note}),n.createElement("b",{className:o.a.note},"5.3KB"))),n.createElement("td",null,"중간",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:o.a.note},"14.4KB"))),n.createElement("td",null,"큼",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:o.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"유효성 검사")),n.createElement("td",null,"내장됨 &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"직접 만들어야 함 &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"직접 만들어야 함 & 플러그인")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"러닝 커브")),n.createElement("td",null,"낮음"),n.createElement("td",null,"중간"),n.createElement("td",null,"중간")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"현황")),n.createElement("td",null,"작은 커뮤니티: 새로운 라이브러리이며 성장 중"),n.createElement("td",null,"큰 커뮤니티: 커뮤니티 안에서 잘 정립된 폼 라이브러리"),n.createElement("td",null,"큰 커뮤니티: 커뮤니티 안에서 잘 정립된 폼 라이브러리"))))))},{title:"제어 컴포넌트와 조합할 수 있나요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"짧게 말씀드리면 ",n.createElement("b",null,"할 수 있습니다.")),n.createElement("p",null,"React-hook-form 은 사용자가 제어되는 폼을 만들도록 권장하진 않지만"," ","제어 컴포넌트와 쉽게 조합할 수 있습니다."),n.createElement("p",null,"그 방법은 ",n.createElement("code",null,"watch")," API 를 사용하여 각 인풋 값의 변화를 관찰하고 value prop 에 할당하는 것입니다."),n.createElement("p",null,"또는 감싸는 컴포넌트인"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller")," ","을 사용하여 커스텀 레지스터를 관리 할 수 ​​있습니다."))},{title:"React Hook Form 테스트하기",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"왜 ",n.createElement("code",null,"act")," 경고가 뜨나요?"),n.createElement("p",null,"React Hook Form 의 모든 유효선 검사 방법은 비동기 함수로 다루어집니다. 따라서"," ",n.createElement("a",{className:m.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act")," ","부분을 ",n.createElement("code",null,"async")," 로 감싸주는게 중요합니다.")),n.createElement("li",null,n.createElement("p",null,"왜 입력값이 바뀔 때 이벤트가 발생하나요?"),n.createElement("p",null,"React Hook Form 은 입력값이 변화할 때 ",n.createElement("code",null,"input")," ","이벤트를 사용합니다. 따라서 ",n.createElement("code",null,"react-testing-library")," ","의 ",n.createElement("code",null,"fireEvent.input")," 을 사용하면 쉽게 문제를 해결할 수 있습니다."))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"watch:")," 이벤트 리스너를 통해 인풋의 변경을 구독하고, 구독하고 있는 인풋 필드에 따라 리랜더링됩니다."," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"이 codesandbox")," ","에서 실제 동작을 확인하실 수 있습니다.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"getValues"),": 커스텀 훅 안에 레퍼런스로 저장되어있는 값을 가져옵니다. 빠르고 리소스를 적게 먹습니다. 이 메서드는 리랜더링을 일으키지 않습니다.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"지역 상태"),": React 지역 상태는 단순히 인풋의 상태를 표현하는 것 뿐 아니라 어떤 것이 랜더되어야 할지도 결정합니다. 이 경우 매 인풋 값이 바뀔때마다 리랜더링이 일어납니다."))))},{title:"왜 삼항 연산자를 적용한 기본값은 의도한대로 반응하지 않나요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form 은 전체 폼과 인풋을 제어하지 않습니다. 그래서 리액트는 실제 입력 값이 바뀌었는지 알아차리지 못하는 것입니다. 이 문제를 해결하기 위해 인풋 컴포넌트에 고유의 ",n.createElement("code",null,"key")," prop 을 전달해줄 수 있습니다. ",n.createElement("code",null,"key")," prop 에 대해서 더 자세히 알아보시려면"," ",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"Kent C. Dodds 가 쓴 이 글을 읽어보세요"),"."),n.createElement(s.b,{rawData:p.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"submitFocusError 옵션을 주어도 Controller 한테는 동작하지 않는데요?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"유효성 검사 후 에러가 발생할 때, React Hook Form 은 자동으로 잘못된 인풋 엘리먼트로 포커스를 맞춥니다. 그 인풋 엘리먼트는 적절하게 ref 가 할당되어 있어야 합니다. 예를 들어 기본 ",n.createElement("code",null,"<input />")," ","이나, 적절하게 ref 를 드러내는 서드파티 컴포넌트(예: MUI의",n.createElement("code",null,"<TextField inputRef={register({required: 'Field Required'})} />"),")처럼 말입니다."),n.createElement("p",null,"하지만 MUI의 ",n.createElement("code",null,"<Autocomplete>")," 나, AntD 의"," ",n.createElement("code",null,"<XX>")," 같은 일부 서드파티 컴포넌트는 형태가 바뀌기 때문에 ref 를 예측하기 아주 어렵습니다. 그래서 React Hook Form 은 유효성을 검사하고 에러를 적절히 찾아닐 수 있지만 이런 컴포넌트에 바로 포커스를 맞출 수 없습니다."),n.createElement("p",null,"우회 해결책으로 실제로 인풋 ref 를 가져올 수 있다면, 유효성 검사 후 에러가 발생할 때 수동으로 서드파티 컴포넌트의 포커스를 지정해줄 수 있습니다."),n.createElement(s.b,{rawData:d.a}),n.createElement("p",null,'If you find difficult to make the autofocus with external controlled component. It is possible to disable the "autofocus on error" feature. Maybe this behavior will bring a better user experience in some cases. ',n.createElement("code",null,"useForm({submitFocusError: false});")))}]}},Ejux:function(e,t,l){"use strict";l("91GP");var n=l("q1tI"),r=l("7XWO"),a=l("JLeh"),o=l.n(a);t.a=function(e){var t,l=e.children,a=e.buttonLabels,c=Object(r.c)().state,m=n.useState(0),u=m[0],i=m[1],s=null==c||null===(t=c.setting)||void 0===t?void 0:t.lightMode;return n.createElement("div",null,n.createElement("div",{className:o.a.buttonTabGroup+" "+(s?o.a.lightButtonTabGroup:""),style:{marginBottom:-15,marginTop:30}},a.map((function(e,t){return n.createElement("button",{key:e,style:Object.assign({},t===u?{cursor:"default",borderTop:"1px solid transparent"}:{}),disabled:t===u,onClick:function(){return i(t)}},e)}))),l.map((function(e,t){return n.createElement("div",{key:t,style:{display:u===t?"block":"none"}},e)})))}},"H+U3":function(e,t,l){"use strict";var n=l("q1tI"),r=l("LuW/"),a=l("G3ap"),o=l.n(a),c=l("fHxr"),m=l.n(c),u=l("9Ruc"),i=l.n(u),s=l("mLYZ"),d=l("09z+"),p=l("T3Co");t.a={title:"FAQs",header:{title:"FAQs",description:"よくある質問と答え。"},questions:[{title:"React Hook Formのパフォーマンス",description:n.createElement("p",null,"パフォーマンスはこのcustom hookを作成する主な目的の一つでした。 React Hook Formでは非制御コンポーネントによってregister関数をrefで実行しています。 このアプローチにより、ユーザーからの入力や値の変更により発生する再レンダリングの量を削減しています。 コンポーネントのページへのマウントも制御されていないことによりはるかに高速になります。",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"こちら"),"の他のライブラリとのマウントスピードの簡単な比較をご覧下さい。")},{title:"アクセス可能な入力エラーとメッセージを作成するには？",description:n.createElement("p",null,"React Hook Formは",n.createElement("a",{href:"https://ja.reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"非制御コンポーネント"),"に基づいているため、アクセス可能なカスタムフォームを簡単に構築できます。")},{title:"クラスコンポーネントでも使えますか？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"そのままでは動作しませんが、クラスコンポーネントを包むラッパーを作成して使用することは可能です。"),n.createElement("blockquote",null,"クラスコンポーネント内でのHooksの使用は出来ませんが、クラスコンポーネントと Hooksを使用した関数コンポーネントを単一のDOM Tree内で混在させることは可能です。 クラスコンポーネントかHooksを使用した関数コンポーネントのどちらを利用するかは、 そのコンポーネントの実装の詳細に過ぎません。長い目で見れば、 HooksはReactのコンポーネントを書く際の最初の選択肢になっていくだろうと私達は予想しています。"))},{title:"フォームをリセットするには？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"フォームをリセットする方法は2つあります。"),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"フォームのリセットボタンのクリックと同等の効果を持つメソッドです。 フォーム内の",n.createElement("code",null," input/select/checkbox "),"要素の値のみリセットします。")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Formの",n.createElement("code",null,"reset"),"メソッドは、フォーム内の全てのフィールドの値をリセットし、フォーム内の全ての",n.createElement("code",null,"errors"),"を消去します。"))))},{title:"フォームの値を初期化するには？",description:n.createElement("p",null,"React Hook Formは非制御コンポーネントによって出来ています。 非制御コンポーネントでは、それぞれのfieldに対して",n.createElement("code",null,"defaultValue"),"か",n.createElement("code",null,"defaultChecked"),"を指定出来ます。 実はこれよりも更に簡単な全てのインプット値の初期化方法をReact Hook Formは提供しています。 下記の例を参考して下さい。")},{title:"refを共有するには？",description:n.createElement("p",null,"React Hook Form では入力値を取得するために",n.createElement("code",null,"ref"),"が必要ですが、",n.createElement("code",null,"ref"),"を他の目的（ビューへのスクロールなど）に使用することもできます。下記の例を参考して下さい。")},{title:"refへのアクセスが出来ない場合は？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"実は",n.createElement("code",null,"ref"),"を使わずとも",n.createElement("code",null,"register"),"は使用出来ます。 加えて",n.createElement("code",null,"setValue"),"と",n.createElement("code",null,"setError"),"、",n.createElement("code",null,"triggerValidation"),"の手動での使用も出来ます。"),n.createElement("p",null,n.createElement("b",{className:o.a.note},"注:")," ただし",n.createElement("code",null,"ref"),"が登録されていないため, React Hook Formはinputのイベントリスナーへの登録が出来ず、 そのため値やエラーの更新を手動で行わなければいけません"))},{title:"ブラウザのサポートは？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Formは全ての主要なブラウザに対応しています。"),n.createElement("p",null,"IE11をサポートしたい場合は、IE11バージョンのreact-hook-formをインポートして下さい。"))},{title:"最初のキーストロークが機能しない場合は？",description:n.createElement(n.Fragment,null,n.createElement("p",null,n.createElement("code",null,"defaultValue"),"の代わりに",n.createElement("code",null,"value"),"を使っていないかよく確認して下さい。"),n.createElement("p",null,"React Hook Formは非制御インプットを基にして作られているため、インプットの値を",n.createElement("code",null,"onChange"),"で",n.createElement("code",null,"state"),"を通して変更する必要はありません。",n.createElement("code",null,"value"),"は使わずに、",n.createElement("code",null,"defaultValue"),"でのインプットの初期値 の設定のみ行って下さい。"))},{title:"MutationObserverが原因でテストに失敗した場合は？",description:n.createElement("p",null,"テスト中に",n.createElement("code",null,"MutationObserver"),"が原因の問題が発生した場合は、",n.createElement("code",null,"mutationobserver"),"をインストールしテストの",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js"),"でインポートしてください。")},{title:"React Hook Form、FormikそれともRedux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"全てのライブラリはフォーム作成の体験を簡単で素晴らしいものにするという同じ問題を解決しようとしていますが 、3つのライブラリーの間にはいくつかの根本的な違いがあります。 react-hook-formは非制御入力を念頭に置いて開発されており、 ベストパフォーマンスのフォームを提供しようとし、再レンダリング数を出来る限り少なく抑えています。 さらに、react-hook-formはReact Hookによって構築され、hookとして使用されます。 つまり、コンポーネントをインポートしません。詳細な違いを以下に示します。"),n.createElement("div",{className:m.a.tableWrapper},n.createElement("table",{className:m.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+r.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Component")),n.createElement("td",null,n.createElement("a",{href:"https://ja.reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"uncontrolled")),n.createElement("td",null,n.createElement("a",{href:"https://ja.reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://ja.reactjs.org/docs/forms.html",target:"_blank"},"controlled"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Rendering")),n.createElement("td",null,"最小限の再レンダリング"),n.createElement("td",null,"ローカル状態の変化に応じて再レンダリングします。つまり、入力時に変化します。"),n.createElement("td",null,"状態管理ライブラリ（Redux）の変更に応じて再レンダリングします。 これは、入力時に変化することを意味します。")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Package size")),n.createElement("td",null,"小",n.createElement("br",null),n.createElement("code",null,"react-hook-form@3.26.2",n.createElement("br",null),n.createElement("b",{className:o.a.note},"5.3KB"))),n.createElement("td",null,"中",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:o.a.note},"14.4KB"))),n.createElement("td",null,"大",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:o.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Validation")),n.createElement("td",null,"Built-in &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or Plugins")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"学習曲線")),n.createElement("td",null,"低い"),n.createElement("td",null,"中"),n.createElement("td",null,"中")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"状況")),n.createElement("td",null,"小さなコミュニティ: 新しい成長中のライブラリ"),n.createElement("td",null,"大きなコミュニティ: コミュニティによって十分に確立されたフォームライブラリ"),n.createElement("td",null,"大きなコミュニティ: コミュニティによって十分に確立されたフォームライブラリ"))))))},{title:"制御されたコンポーネントと組み合わせて使用することができますか？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"短い回答： ",n.createElement("b",null,"Yes")),n.createElement("p",null,"React Hook Form"," ","は、制御されたフォームを構築することを推奨していませんが、 制御されたコンポーネントと組み合わせて簡単に構築することができます。"),n.createElement("p",null,"それは、",n.createElement("code",null,"watch")," API を使用して、各入力の変更を監視し、 value prop に割り当てるトリックです。"),n.createElement("p",null,"または、ラッパーコンポーネントの"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller")," ","を使用して、これらのカスタム登録を処理できます。"))},{title:"React Hook Form のテスト",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("code",null,"act")," の警告が表示されるのはなぜですか？"),n.createElement("p",null,"React Hook Form の全てのバリデーションメソッドは非同期関数として扱われるため、",n.createElement("a",{className:i.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act")," ","を ",n.createElement("code",null,"async")," でラップすることが重要です。")),n.createElement("li",null,n.createElement("p",null,"fireEvent で入力の変更がトリガーされないのはなぜですか？"),n.createElement("p",null,"React Hook Form は、入力の変更に ",n.createElement("code",null,"input")," ","イベントを使用しています。 入力の変更がトリガーするために、 react-testing-library の ",n.createElement("code",null,"fireEvent.input")," ","に簡単に切り替えることができます。"))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"watch:")," ","イベントリスナーを介して input"," ","の変更を購読し、購読されているフィールドに基づいて再レンダリングします。 どの input"," ","が監視/購読されているかに基づいて再レンダリングします。 実際の動作については、",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"この codesandbox")," ","をご覧ください。")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"getValues"),":"," ","カスタムフック内に参照（",n.createElement("code",null,"ref"),"）として格納された値を、高速かつ安価に取得します。 このメソッドは再レンダリングをトリガーしません。")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"local state"),": React"," ","のローカルな状態は input"," ","の状態を表すだけでなく、レンダリングするべきかを決定します。 これは、各 input の変更時にトリガーされます。"))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form doesn't control your entire form and inputs, which is the reason why React wouldn't recognise the actual input that has been exchanged or swopped. As a solution, you can resolve this problem by giving a unique ",n.createElement("code",null,"key")," prop to your input. You can also read more about the key props from"," ",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"this article written by Kent C. Dodds"),"."),n.createElement(s.b,{rawData:p.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"After a validation error, React Hook Form will automatically focus on the invalids elements of which have their proper ref, like the native inputs (eg: ",n.createElement("code",null,"<input />"),") or some 3rd party Components that correctly export his ref (eg: from MUI"," ",n.createElement("code",null,"<TextField inputRef={register({required: 'Field Required'})} />"),")"),n.createElement("p",null,"However, for some 3rd party controlled Components like"," ",n.createElement("code",null,"<Autocomplete>")," from MUI or ",n.createElement("code",null,"<XX>")," ","from AntD) it's very difficult to predict his ref because the formats changes, so React Hook Form will properly detect the validation error but will not be able to automatically focus that kind of Components."),n.createElement("p",null,"As a workaround, after the validation error, you can manually focus on the 3rd party controlled Component (if you can get the actual internal input ref), for example:"),n.createElement(s.b,{rawData:d.a}),n.createElement("p",null,'If you find difficult to make the autofocus with external controlled component. It is possible to disable the "autofocus on error" feature. Maybe this behavior will bring a better user experience in some cases. ',n.createElement("code",null,"useForm({submitFocusError: false});")))}]}},JLeh:function(e,t,l){e.exports={buttonTabGroup:"TabGroup-module--buttonTabGroup--2yFrr",lightButtonTabGroup:"TabGroup-module--lightButtonTabGroup--2_pAv"}},LKca:function(e,t,l){"use strict";var n=l("q1tI"),r=l("LuW/"),a=l("G3ap"),o=l.n(a),c=l("fHxr"),m=l.n(c),u=l("9Ruc"),i=l.n(u),s=l("mLYZ"),d=l("09z+"),p=l("T3Co");t.a={title:"FAQs",header:{title:"FAQs",description:"Perguntas feitas frequentemente"},questions:[{title:"Performance do React Hook Form",description:n.createElement("p",null,"Performance é um dos objetivos principais para construir esse hook customizável. React Hook Form depende de componentes não controlados, consequentemente, esta é a razão pela qual a função de 'register' estar no ref. Esta abordagem irá reduzir o total de novas renderizações ocorridas pela digitação do usuário ou mudança de valores. Componentes montados na página são mais rápidos porque eles não são controlados. Para montar com velocidade, Eu tenho um guia completo de comparações rápidas, que você pode conferir neste"," ",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"link"),".")},{title:"Como criar campos de erros e mensagens acessíveis?",description:n.createElement("p",null,"React Hook Form é baseado em"," ",n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"Componentes não controlados"),", que nos possibilita construir formulários acessíveis e customizados facilmente.")},{title:"Funciona com componentes de classe?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Não, não nesta abordagem. mas você pode empacotar os componentes e usar como componente de classe."),n.createElement("blockquote",null,"Você nao pode utilizar o Hooks dentro de um componente de classe, mas você pode definir uma classe mista e funções de componente com Hooks em uma única árvore. Se um componente é uma classe ou função que use o Hooks, é um detalhe de implementação do componente. A longo prazo esperamos que o Hooks seja a forma principal de escrever componentes no React."))},{title:"Como limpar um formulário?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Há dois métodos para limpar formulário."),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"Este método faz a mesma coisa que clicar no botão reset do formulário, e apenas limpa ",n.createElement("code",null,"input/select/checkbox"),".")),n.createElement("li",null,n.createElement("b",null,"API do React Hook Form: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Form's ",n.createElement("code",null,"reset")," método irá limpar todos os valores do formulário, e também irá limpar todos os"," ",n.createElement("code",null,"errors")," dentro do formulário."))))},{title:"Como inicializar o formulário com valores?",description:n.createElement("p",null,"O formulário React Hook depende de um componente não controlado. Com um componente não controlado, você pode especificar um"," ",n.createElement("code",null,"defaultValue")," ou ",n.createElement("code",null,"defaultChecked")," para um campo individual. Entretanto, o hook mesmo provê uma forma simples de inicializar todos os valores dos campos também. Como o exemplo abaixo:")},{title:"Como compartilhar o uso do ref?",description:n.createElement("p",null,"React Hook Form precisa do ",n.createElement("code",null,"ref")," para coletar o valor do campo, entretanto, você pode querer usar o ",n.createElement("code",null,"ref")," para outros propósitos (ex. rolar dentro de uma página). O seguinte exemplo irá mostrar como.")},{title:"E se eu não tiver acesso ao ref?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Você pode atualmente usar o ",n.createElement("code",null,"register")," em um campo sem o"," ",n.createElement("code",null,"ref"),". De fato, você pode manualmente usar"," ",n.createElement("code",null,"setValue"),", ",n.createElement("code",null,"setError")," e"," ",n.createElement("code",null,"triggerValidation"),"."),n.createElement("p",null,n.createElement("b",{className:o.a.note},"Nota:")," caso ",n.createElement("code",null,"ref")," ","não tem sido registrado, React Hook Form não será capaz de registrar eventos do campo. Isso significa que você terá que manualmente atualizar e setar os erros."))},{title:"Suporte ao navegador?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form suporta todos os principais navegadores."),n.createElement("p",null,"Para suporte legado ao IE11, Você pode importar a versão react-hook-form IE 11."))},{title:"Por que o primeiro pressionamento de tecla não está funcionando?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Confira se você está usando o ",n.createElement("code",null,"value")," ao invés de"," ",n.createElement("code",null,"defaultValue"),"."),n.createElement("p",null,"React Hook Form é construido com base em componentes não controlados, que significa que você não pode alterar o campo"," ",n.createElement("code",null,"value")," através do ",n.createElement("code",null,"state")," pelo"," ",n.createElement("code",null,"onChange"),". Consequentemente você não precisa do"," ",n.createElement("code",null,"value")," de toda forma, de fato você apenas precisa do"," ",n.createElement("code",null,"defaultValue")," para o valor inicial do campo."))},{title:"Teste falhou devido ao MutationObserver?",description:n.createElement("p",null,"Se você tiver dificuldade durante o teste e o problema causado foi pelo ",n.createElement("code",null,"MutationObserver"),". Tenha certeza se instalou"," ",n.createElement("code",null,"mutationobserver")," e importe o pacote em seu teste"," ",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js file"),".")},{title:"React Hook Form, Formik ou Redux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Antes de tudo, todas as bibliotecas tentam resolver o mesmo problema o que está tornando a experiência de criação de formulários fácil e ótima. No entanto, existem algumas diferenças fundamentais entre os três, react-hook é construído com a inputs não controlados em mente e tenta fornecer ao seu formulário o melhor desempenho e a menor renderização possível. Além disso, o formulário react-hook-form foi construido pelo React Hook e usado como hook, o que significa que não há nenhum componente para você importar. Aqui estão algumas das diferenças de detalhes:"),n.createElement("div",{className:m.a.tableWrapper},n.createElement("table",{className:m.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+r.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Componente")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"não controlado")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlado")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlado"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Renderizando")),n.createElement("td",null,"re renderização minima"),n.createElement("td",null,"renderize novamente de acordo com as mudanças de estado local, o que significa que você digita a entrada."),n.createElement("td",null,"renderize novamente de acordo com as alterações da biblioteca de gerenciamento de estado (Redux), quando você digita em um campo.")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Componente (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Componente (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Tamanho do pacote")),n.createElement("td",null,"Pequeno",n.createElement("br",null),n.createElement("code",null,"react-hook-form@3.26.2",n.createElement("br",null),n.createElement("b",{className:o.a.note},"5.3KB"))),n.createElement("td",null,"Médio",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:o.a.note},"14.4KB"))),n.createElement("td",null,"Alto",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:o.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Validação")),n.createElement("td",null,"Construídos com &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Construa seu próprio &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Construa seu próprio & Plugin")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Curva de aprendizado")),n.createElement("td",null,"Baixo"),n.createElement("td",null,"Medium"),n.createElement("td",null,"Alto")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Status")),n.createElement("td",null,"Comunidade Pequena: Novas bibliotecas e crescimento"),n.createElement("td",null,"Comunidade Média: Bem mantida a biblioteca pela comunidade"),n.createElement("td",null,"Comunidade Grande: Bem mantida a biblioteca pela comunidade"))))))},{title:"Pode funcionar com componente controlado?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Resposta simples: ",n.createElement("b",null,"Sim")),n.createElement("p",null,"React-hook-form não é recomendado para construçãoo de formulários controlados, entretanto você pode utilizar facilmente."),n.createElement("p",null,"O truque utilizando ",n.createElement("code",null,"watch")," API para monitorar cada input e mudar o valor assinado a prop"),n.createElement("p",null,"Alternativamente, você pode usar um componente por volta"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller")," ","que tomará conta de registrar customizadamente para voocê."))},{title:"Testando React Hook Form",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"Por que estou recebendo o alerta ",n.createElement("code",null,"act"),"?"),n.createElement("p",null,"Todas os métodos de validação nocReact Hook Form serão tratados como funções assíncronas, então, é importante utilizar"," ",n.createElement("code",null,"async")," no entorno do seu"," ",n.createElement("a",{className:i.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act"),".")),n.createElement("li",null,n.createElement("p",null,"Por que a mudança do campo não está acionando eventos?"),n.createElement("p",null,"React Hook Form utiliza ",n.createElement("code",null,"input")," eventos para mudança de campos, então para corrigir isto você pode simplesmente substituir ",n.createElement("code",null,"fireEvent.input")," por react-testing-library"))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"watch:")," subscreve no Input Change via Event Listener e renderiza novamente baseado em qual campo está subscrito. A re-renderização basea-se em qual input está sendo assistido/subscrito. Veja"," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"este codesandbox")," ","do atual comportamento.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"getValues"),": get value que é armazenado dentro do hook customizado como referência, rápido e barato. Este método não dispara o re-render;")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"local state"),": React local state representa mais que apenas o estado do Input mas também decide o que renderizar. Isso irá disparar em cada mudança nos inputs."))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form doesn't control your entire form and inputs, which is the reason why React wouldn't recognise the actual input that has been exchanged or swopped. As a solution, you can resolve this problem by giving a unique ",n.createElement("code",null,"key")," prop to your input. You can also read more about the key props from"," ",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"this article written by Kent C. Dodds"),"."),n.createElement(s.b,{rawData:p.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"After a validation error, React Hook Form will automatically focus on the invalids elements of which have their proper ref, like the native inputs (eg: ",n.createElement("code",null,"<input />"),") or some 3rd party Components that correctly export his ref (eg: from MUI"," ",n.createElement("code",null,"<TextField inputRef={register({required: 'Field Required'})} />"),")"),n.createElement("p",null,"However, for some 3rd party controlled Components like"," ",n.createElement("code",null,"<Autocomplete>")," from MUI or ",n.createElement("code",null,"<XX>")," ","from AntD) it's very difficult to predict his ref because the formats changes, so React Hook Form will properly detect the validation error but will not be able to automatically focus that kind of Components."),n.createElement("p",null,"As a workaround, after the validation error, you can manually focus on the 3rd party controlled Component (if you can get the actual internal input ref), for example:"),n.createElement(s.b,{rawData:d.a}),n.createElement("p",null,'If you find difficult to make the autofocus with external controlled component. It is possible to disable the "autofocus on error" feature. Maybe this behavior will bring a better user experience in some cases. ',n.createElement("code",null,"useForm({submitFocusError: false});")))}]}},QkAT:function(e,t,l){"use strict";t.a='import React from "react";\nimport { useForm, Controller } from "react-hook-form";\nimport { TextField } from "@material-ui/core";\n\nfunction App() {\n  const { control, handleSubmit } = useForm();\n\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <Controller\n        as={TextField}\n        name="firstName"\n        control={control}\n        defaultValue=""\n      />\n      \n      <input type="submit" />\n    </form>\n  );\n}\n'},T3Co:function(e,t,l){"use strict";t.a='import React from "react";\nimport { useForm } from "react-hook-form";\n\nexport default function App() {\n  const { register } = useForm();\n\n  return (\n    <div>\n      {watchChecked ? (\n        <input ref={register} name="input3" type="text" key="key1" defaultValue="1" />\n      ) : (\n        <input ref={register} name="input4" type="text" key="key2" defaultValue="2" />\n      )}\n    </div>\n  );\n}\n'},VmmH:function(e,t,l){"use strict";l("91GP"),l("Z2Ku"),l("L9s1"),l("9VmF");var n=l("q1tI"),r=l("LuW/"),a=l("Kzm3"),o=l("7XWO"),c=l("G3ap"),m=l.n(c),u=l("k52A"),i=l.n(u),s={borderBottom:"1px solid "+r.a.lightPink};t.a=n.memo((function(e){var t,l=e.links,c=e.goToSection,u=e.enLinks,d=e.isStatic,p=e.currentLanguage,E=e.activeIndex,h=Object(o.c)().state,f=null==h||null===(t=h.setting)||void 0===t?void 0:t.lightMode;return n.createElement("aside",{className:i.a.menu+" "+(f?i.a.lightMenu:"")},n.createElement("div",null,n.createElement("div",{className:i.a.titleList},n.createElement("h2",{className:m.a.title,style:{fontSize:16,color:r.a.lightBlue}},a.a.menu[p])),n.createElement("ul",{className:"scrollArea"},l.map((function(e,t){var a="function"==typeof e?e().title:e.title,o="function"==typeof u[t]?u[t]().title:u[t].title,m=a.startsWith("use")?"♆ "+a:a;return/^[A-Z]/.test(a[0])&&!a.includes(" ")&&"TypeScript"!==a&&(m="❒ "+m),["useformcontext","controller","usefieldarray","errormessage","validationschema","validationresolver","browser built-in validation"].includes((a||"").toLowerCase())||d?n.createElement("li",{key:a},n.createElement("span",{className:i.a.code},"</>"),d?n.createElement("button",{onClick:function(){c(o,t)},style:Object.assign({top:"-3px",position:"relative"},E===t?s:{})},m):n.createElement("button",{onClick:function(){c(o,t)},style:Object.assign(Object.assign({top:"-3px",position:"relative"},"Quick Start"===a?{paddingLeft:0}:null),E===t?s:{})},m)):n.createElement("li",{key:a,onClick:function(){return c(o,t)},style:Object.assign({},t>0?Object.assign(Object.assign({marginLeft:10},t!==l.length-8?{borderLeft:"1px solid "+r.a.lightPink}:null),3===t?{paddingTop:10,marginTop:-15}:null):null)},n.createElement("span",{className:i.a.arrow+" "+(t===l.length-8?i.a.arrowLast:"")},t>0&&n.createElement("span",{style:{left:1,top:-1,position:"relative"}},"╴")),"Quick Start"!==a&&n.createElement("span",{className:i.a.code},"</>")," ",n.createElement("button",{style:Object.assign(Object.assign({top:"-3px",position:"relative"},"Quick Start"===a?{paddingLeft:0}:null),E===t?s:{})},m))})),n.createElement("li",null,n.createElement("span",{className:i.a.code},"</>"),n.createElement("a",{rel:"noopener noreferrer",href:"https://github.com/bluebill1049/react-hook-form/tree/master/examples",target:"_blank"},a.a.codeExample[p])))))}))},fHxr:function(e,t,l){e.exports={table:"table-module--table--oldWG",tableWrapper:"table-module--tableWrapper--2czrK",mobileTypeText:"table-module--mobileTypeText--1_lbk"}},k52A:function(e,t,l){e.exports={menu:"SideMenu-module--menu--WeHDU",arrow:"SideMenu-module--arrow--3QN_Z",arrowLast:"SideMenu-module--arrowLast--3oMQI",lightMenu:"SideMenu-module--lightMenu--XYEOq",titleList:"SideMenu-module--titleList--YlD4k",code:"SideMenu-module--code--L4G67"}},nimw:function(e,t,l){"use strict";var n=l("q1tI"),r=l("LuW/"),a=l("G3ap"),o=l.n(a),c=l("fHxr"),m=l.n(c),u=l("9Ruc"),i=l.n(u),s=l("mLYZ"),d=l("09z+"),p=l("T3Co");t.a={title:"常见问题",header:{title:"常见问题",description:"经常问的问题。"},questions:[{title:"React Hook Form的性能",description:n.createElement("p",null,"性能是构建这个自定义挂钩(Hook)的主要目标之一。 React Hook Form依赖于不受控制的组件，因此",n.createElement("code",null,"register"),"函数发生在",n.createElement("code",null,"ref"),"的原因。 这种方法将减少由于用户输入或值改变而发生的重新render数量。 组件安装到页面也更快，因为它们不受控制。 其次对于安装速度，我已经完成了一个快速比较测试，",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"你可以通过这个链接来参考"),"。")},{title:"如何创建一个可访问的输入错误和消息？",description:n.createElement("p",null,"React Hook Form基于不受控制",n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"(Uncontrolled Component)"),"的组件，它使您能够轻松的构建自定义表单。")},{title:"它是否与Class类组件一起使用？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"不, 但是你可以在它周围构建一个包装并在你的类组件中使用。"))},{title:"如何重置表单？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"有两种方法。"),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"此方法与单击表单的重置按钮相同，并且只清除",n.createElement("code",null,"input/select/checkbox"),"框值。")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Form的重置方法将重置所有字段值，并且还将清除表单中的所有错误。"))))},{title:"如何初始化值？",description:n.createElement("p",null,"React Hook Form依赖于不受控制的组件。 对于不受控制的组件，可以为单个表格加入默认值",n.createElement("code",null,"defaultValue"),"或加入在默认选中的值",n.createElement("code",null,"defaultChecked"),"。 但是，钩子本身也提供了一种更简单的方法来初始化所有输入值。 下面的例子:")},{title:"如何分享ref用法?",description:n.createElement("p",null,"React Hook Form需要",n.createElement("code",null,"ref"),"来收集输入值，但是，您可能需要将",n.createElement("code",null,"ref"),"用于其他目的目的（例如，如果您想要使用它）。 滚动到视图中）。 以下示例将向您展示如何。")},{title:"如果你没有访问ref怎么办？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"您实际上可以在没有",n.createElement("code",null,"ref"),"的情况下注册",n.createElement("code",null,"register"),"输入。 事实上，您可以手动设置值，设置错误",n.createElement("code",null,"setError"),"和触发验证",n.createElement("code",null,"triggerValidation"),"。"),n.createElement("p",null,n.createElement("b",{className:o.a.note},"注意:")," 由于",n.createElement("code",null,"ref"),"尚未注册，因此React Hook Form将无法加入侦听器(event listener)。 这意味着您将不得不手动更新值和错误。"))},{title:"浏览器支持?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form支持所有主流浏览器。"),n.createElement("p",null,"对于传统的IE11支持，您可以从IE11版本导入。"))},{title:"为什么第一次按键不起作用？",description:n.createElement(n.Fragment,null,n.createElement("p",null,"仔细检查是否使用值",n.createElement("code",null,"value"),"而不是默认值",n.createElement("code",null,"defaultValue"),"。"),n.createElement("p",null,"React Hook Form是基于不受控制的输入构建的，这意味着您不需要通过",n.createElement("code",null,"onChange"),"更改输入值。 因此，您根本不需要值，事实上，您只需要初始输入值",n.createElement("code",null,"value"),"的默认值",n.createElement("code",null,"defaultValue"),"。"))},{title:"因MutationObserver测试失败?",description:n.createElement("p",null,"如果您在测试过程中遇到困难，并且问题是由",n.createElement("code",null,"MutationObserver"),"引起的。 确保安装",n.createElement("code",null,"MutationObserver"),"并在测试设置中导入此包",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js file"),"文件。")},{title:"React Hook Form, Formik 或者 Redux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"首先，他们都在尝试解决同样的问题，使表单变的简单。 然而，三者之间的一些根本性区别，react-hook-form是 建立在不受控制的输入，并尝试提供您的表单 具有最佳性能和最少重新render。react-hook-form是由React Hook构建并用作hook, 这意味着没有组件供您导入。 这里有一些的细节差异:"),n.createElement("div",{className:m.a.tableWrapper},n.createElement("table",{className:m.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+r.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Component")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"uncontrolled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Rendering")),n.createElement("td",null,"最少的re-render"),n.createElement("td",null,"您键入输入将重新启动render。"),n.createElement("td",null,"您键入输入将重新启动render。")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Package size")),n.createElement("td",null,"小",n.createElement("br",null),n.createElement("code",null,"react-hook-form@3.26.2",n.createElement("br",null),n.createElement("b",{className:o.a.note},"5.3KB"))),n.createElement("td",null,"中",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:o.a.note},"14.4KB"))),n.createElement("td",null,"大",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:o.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"验证")),n.createElement("td",null,"自带验证 &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"自己建立验证 &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or Plugins")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Learning curve")),n.createElement("td",null,"低"),n.createElement("td",null,"中"),n.createElement("td",null,"中")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"状态")),n.createElement("td",null,"小社区"),n.createElement("td",null,"大社区"),n.createElement("td",null,"大社区"))))))},{title:"Can it work with Controlled component?",description:n.createElement(n.Fragment,null,n.createElement("p",null,n.createElement("b",null,"可以的。")),n.createElement("p",null,"React-hook-form不建议您建立受控的表单， 但是您仍然可以轻松实现。"),n.createElement("p",null,"使用",n.createElement("code",null," watch ")," API监视每个输入的更改并分配给价值道具。"),n.createElement("p",null,"或者，您可以使用我们的包装器组件",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller"),"，它会为您处理那些自定义注册。"))},{title:"Testing React Hook Form",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"为什么我会收到",n.createElement("code",null," act "),"警告？"),n.createElement("p",null,"React Hook表单中的所有验证方法将被视为 异步函数, 因此包装",n.createElement("code",null,"async")," 在你"," ",n.createElement("a",{className:i.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act"),"很重要 .")),n.createElement("li",null,n.createElement("p",null,"为什么输入更改不是触发事件？"),n.createElement("p",null,"React Hook Form 使用",n.createElement("code",null," input "),"事件作为输入来响应。您可以轻松切换到",n.createElement("code",null," fireEvent.input "),"用于react-testing-library。"))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"watch:"),"订阅通过事件侦听器更改输入，然后根据订阅的字段。根据哪个输入重新渲染 观看/订阅。 查看"," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"这个 codesandbox")," ","的实际行为.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"getValues"),": 获得价值存储在自定义钩子中作为参考，既快速又便宜。 此方法不会触发重新渲染。")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:o.a.note},"local state"),": 状态不仅代表输入状态，还决定什么 渲染。这将在每次输入更改时触发。"))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form不能控制您的整个表单和输入，这就是为什么React无法识别实际输入的原因当被交换或交换。作为解决方案，您可以解决此问题 通过为您的输入提供唯一的",n.createElement("code",null,"key"),"道具来解决问题。您 也可以从这了解更多有关的信息",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"肯特·C·多兹撰写的这篇文章"),"。"),n.createElement(s.b,{rawData:p.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"验证错误后，React Hook Form将自动聚焦在其无效元素上具有适当的引用，例如本机输入（例如：",n.createElement("code",null,"<input />"),"或某些第三方正确导出引用的组件（例如：从MUI",n.createElement("code",null,"<TextField inputRef = {register({required：'必填字段'})} />"),"）"),n.createElement("p",null,"但是，对于某些第三方控制的组件，例如MUI中的",n.createElement("code",null,"<Autocomplete>"),"很难预测他的ref，因此React Hook Form将正确检测验证错误，但将无法自动关注种类的组件。"),n.createElement("p",null,"作为一种解决方法，在验证错误之后，您可以手动关注在第3方控制的组件上（如果您可以获得实际的 内部输入参考），例如："),n.createElement(s.b,{rawData:d.a}),n.createElement("p",null,"如果您发现很难通过外部控制使自动对焦。可以禁用“错误时自动对焦”特征。也许这种行为会带来更好的用户体验。"," ",n.createElement("code",null,"useForm（{ submitFocusError：false });")))}]}},pCax:function(e,t,l){e.exports={installCode:"GetStarted-module--installCode--3pcx3",lightInstallCode:"GetStarted-module--lightInstallCode--26Z3P",copyButton:"GetStarted-module--copyButton--vgJmz"}},"u+r+":function(e,t,l){"use strict";l.d(t,"a",(function(){return u}));var n=l("q1tI"),r=l("Kzm3"),a=l("9Ruc"),o=l.n(a),c=l("9QH1"),m=l.n(c);function u(e){var t=e.currentLanguage;return n.createElement("div",{className:m.a.centerContent,style:{marginTop:100,maxWidth:600}},n.createElement("h1",null,r.a.needYourSupport[t].title),n.createElement("p",null,r.a.needYourSupport[t].description),n.createElement("button",{className:o.a.primaryButton,onClick:function(){window.open("https://github.com/react-hook-form/react-hook-form")},style:{margin:"40px auto"}},r.a.needYourSupport[t].buttonText))}},"zG+m":function(e,t,l){"use strict";l("INYr"),l("pIFo");var n=l("q1tI"),r=l("VmmH"),a=l("mLYZ"),o=l("b2pr"),c=l("TjPv"),m=l("u+r+"),u=l("576C"),i=l("LuW/"),s=l("G3ap"),d=l.n(s),p=l("fHxr"),E=l.n(p),h=l("9Ruc"),f=l.n(h),b=l("09z+"),g=l("T3Co"),k={title:"FAQs",header:{title:"FAQs",description:"Preguntas frecuentes."},questions:[{title:"Performance de React Hook Form",description:n.createElement("p",null,"El rendimiento es uno de los objetivos principales de construir este hook personalizado. React Hook Form se basa en componentes no controlados, de ahí la razón por la cual la función de registro se realiza en el ref. Este enfoque recude la cantidad de renderizados que ocurren debido a la escritura del usuario o al cambio de valores. El montaje de componentes en la página también es mucho más rápido porque son no controlados. Para la velocidad de montaje, realicé una prueba rápida de comparación a la que puedes acceder desde ","",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"este link"),".")},{title:"¿Cómo crear un mensaje de error de Input accesible?",description:n.createElement("p",null,"React Hook Form está basado en"," ",n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"Componentes no controlados"),", lo que te brinda la posibilidad de hacer formularios personalizados accesibles con facilidad.")},{title:"¿Funciona con componentes de clases?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"No, no por defecto. Pero puedes crear un contenedor y usarlo en tu componente de clase."),n.createElement("blockquote",null,"No puedes usar Hooks dentro de un componente de clase, pero puedes mezclar clases y componentes de funciones con Hooks en un solo árbol. Si un componente es una clase o una función que usa Hooks es un detalle de implementación de ese componente. A largo plazo, esperamos que Hooks sea la forma principal en que la gente escriba componentes en React."))},{title:"¿Cómo resetear el formulario?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Hay dos métodos para resetear el formulario."),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"Este método es lo mismo que clickear el botón de reset, y solo limpia los valores de ",n.createElement("code",null,"input/select/checkbox"),".")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"El método ",n.createElement("code",null,"reset")," de React Hook Form resetea todos los valores de los campos, y además limpia todos los",n.createElement("code",null,"errores")," dentro del formulario."))))},{title:"¿Como inicializar los valores del formulario?",description:n.createElement("p",null,"React Hook Form se basa en componentes no controlados. En un componente no controlado, puedes especificar el valor por defecto de un campo individual mediante ",n.createElement("code",null," defaultValue ")," o"," ",n.createElement("code",null," defaultChecked "),". Sin embargo, el Hook proporciona una manera más fácil de inicializar todos los valores de entrada. Ejemplo a continuación:")},{title:"¿Cómo compartir el uso de la referencia?",description:n.createElement("p",null,"React Hook Form necesita de ",n.createElement("code",null,"ref")," para recolectar todos los valores de input, pero además puede que quieras usar ",n.createElement("code",null,"ref"),"para otros propósitos (ej.desplazarse por la pantalla). El siguiente ejemplo te muestra como realizarlo.")},{title:"¿Qué pasa si no tengo acceso a la referencia?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Puedes ",n.createElement("code",null,"registrar")," un input sin una"," ",n.createElement("code",null,"referencia"),". De hecho, puedes setear el valor manualmente con ",n.createElement("code",null,"setValue"),", ",n.createElement("code",null,"setError ")," y",n.createElement("code",null,"triggerValidation"),"."),n.createElement("p",null,n.createElement("b",{className:d.a.note}," Nota: ")," Debido a que la"," ",n.createElement("code",null,"referencia")," no se ha registrado, React Hook Form no podrá registrar listeners de eventos en los inputs. Esto significa que tendrás que actualizar manualmente el valor y el error."))},{title:"¿Soporte en navegadores?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form soporta la majoría de los navegadores."),n.createElement("p",null,"Para el sporte de IE11, puedes importar la versión react-hook-form IE 11."))},{title:"¿Por qué la primera pulsación de tecla no funciona?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Vuelve a chequear si no estás utilizando ",n.createElement("code",null,"value"),"en vez de ",n.createElement("code",null,"defaultValue"),"."),n.createElement("p",null,"React Hook Form está basado en inputs no controlados, lo que significa que no necesitas cambiar el valor del input con"," ",n.createElement("code",null,"value"),"a través del ",n.createElement("code",null,"state")," con"," ",n.createElement("code",null,"onChange"),". De hecho no necesitas ",n.createElement("code",null,"value")," en absoluto, solo necesitas ",n.createElement("code",null,"defaultValue")," para el valor inicial del input."))},{title:"¿El testing falló por MutationObserver?",description:n.createElement("p",null,"Si tienes dificultades en el testeo y el problema fue causado por"," ",n.createElement("code",null,"MutationObserver"),". Asegurate que hayas instalado"," ",n.createElement("code",null,"mutationobserver")," y has importado el paquete en tu test:"," ",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"archivo setup.js"),".")},{title:"¿React Hook Form, Formik o Redux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"En primer lugar, todas estas librerías intentan resolver el mismo problema, que construir formularios sea fácil y excelente. Sin embargo, hay algunas diferencias fundamentales entre los tres, react-hook-form está hecho con inputs no controlados en mente e intenta proporcionar un formulario con mejor rendimiento y menos renderizaciones si es posible. Además de eso, react-hook-form está construido con Hooks de React y se usa como tal, lo que significa que no hay ningún componente que importar. Estos son algunos de los detalles. diferencias:"),n.createElement("div",{className:E.a.tableWrapper},n.createElement("table",{className:E.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+i.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Componente")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"no controlado")," ","&"," ",n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlado")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlado")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlado"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Renderizado")),n.createElement("td",null,"renderizado mínimo"),n.createElement("td",null,"renderizado de acuerdo a cambios de estado locales, mientras tipeas en el input."),n.createElement("td",null,"renderizado de acuerdo a cambios en librerías de administración de estado (Redux), mientras tipeas en el input.")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Componente (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Componente (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Tamaño del paquete")),n.createElement("td",null,"Pequeño",n.createElement("br",null),n.createElement("code",null,"react-hook-form@4.0.0",n.createElement("br",null),n.createElement("b",{className:d.a.note},"6.2KB"))),n.createElement("td",null,"Mediano",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:d.a.note},"14.4KB"))),n.createElement("td",null,"Grande",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:d.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Validación")),n.createElement("td",null,"Incorporada &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Construye tu propia &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Construye tu propia & Plugins")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Curva de aprendizaje")),n.createElement("td",null,"Baja"),n.createElement("td",null,"Mediana"),n.createElement("td",null,"Mediana")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Estado")),n.createElement("td",null,"Comunidad Mediana: Nueva librería y creciendo."),n.createElement("td",null,"Comunidad Amplia: Librería establecida en la comunidad."),n.createElement("td",null,"Comunidad Amplia: Librería establecida en la comunidad."))))))},{title:"¿Puede funcionar con componentes Controlados?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Respuesta corta: ",n.createElement("b",null,"Si")),n.createElement("p",null,"React-hook-form no recomienda construir un formulario controlado, sin embargo, puedes lograrlo fácilmente."),n.createElement("p",null,"El truco es utilizar el ",n.createElement("code",null,"watch")," de la API para monitorear cada cambio en los input y asignar la propiedad value."),n.createElement("p",null,"Alternativamente, puedes utilizar nuestro componente wrapper"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller",title:"React Hook Form Controller"},"Controller")," ","el que se encargará de realizar el registro por ti."))},{title:"Testeando React Hook Form",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"¿Por qué recibo la advertencia de ",n.createElement("code",null,"act"),"?"),n.createElement("p",null,"Todos los métodos de validación en React Hook Form son tratados como funciones async, es importante que wrappees con async tu"," ",n.createElement("a",{className:f.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act"),".")),n.createElement("li",null,n.createElement("p",null,"¿Por qué un cambio en un input no dispara un evento?"),n.createElement("p",null,"React Hook Form utiliza el evento ",n.createElement("code",null,"input")," para los cambios en input, para solucionarlo puedes switchear a"," ",n.createElement("code",null,"fireEvent.input")," para react-testing-library"))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note}," watch: ")," suscríbase a cambio de entrada a través del detector de eventos y renderizado en función de qué campos que están suscritos. Renderizar en función de qué entrada es visto / suscrito revisa"," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"codesandbox")," ","por comportamiento real.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note},"getValues"),": obtener valor que almacena dentro del gancho personalizado como referencia, rápido y barato. Este método no activa el re-renderizado.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note},"estado"),": Reaccionar local state representa más que solo el estado de entrada y también decide qué para renderizar Esto se activará con cada cambio de entrada."))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form no controla todo el formulario y las entradas, que es la razón por la cual React no reconocería la entrada real que tiene sido intercambiado o cambiado. Como solución, puede resolver esto problema al dar un apoyo único de ",n.createElement("code",null," key ")," a su entrada. Tú también puede leer más sobre los accesorios clave de"," ",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"Este artículo escrito por Kent C. Dodds"),"."),n.createElement(a.b,{rawData:g.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Después de un error de validación, React Hook Form se enfocará automáticamente en los elementos inválidos de los cuales tienen su referencia adecuada, como el entradas nativas (p. ej .:"," ",n.createElement("code",null,"<input />"),") o algún tercero Componentes que exportan correctamente su referencia (por ejemplo: desde MUI",n.createElement("code",null,"<TextField inputRef = {register ({required: 'Field Required'})} />"),")"),n.createElement("p",null,"Sin embargo, para algunos Componentes controlados por terceros como",n.createElement("code",null,"<Autocomplete>")," de MUI o ",n.createElement("code",null,"<XX>"),"de AntD) es muy difícil predecir su referencia porque el los cambios de formato, por lo que React Hook Form detectará correctamente el error de validación pero no podrá enfocar automáticamente eso tipo de componentes."),n.createElement("p",null,"Como solución alternativa, después del error de validación, puede enfocar manualmente en el componente controlado por terceros (si puede obtener el real entrada interna ref), por ejemplo:"),n.createElement(a.b,{rawData:b.a}),n.createElement("p",null,'Si le resulta difícil hacer el enfoque automático con control externo componente. Es posible deshabilitar el "enfoque automático en caso de error" característica. Tal vez este comportamiento traerá una mejor experiencia de usuario en algunos casos.'," ",n.createElement("code",null,"useForm ({submitFocusError: false});")))}]},y=l("LKca"),v=l("nimw"),F=l("H+U3"),w=l("B8e9"),R={title:"FAQs",header:{title:"FAQs",description:"frequently asked question."},questions:[{title:"Performance of React Hook Form",description:n.createElement("p",null,"Performance is one of the primary goals for building this custom hook. React Hook Form relies on uncontrolled component, hence the reason why the register function occurs at the ref. This approach will reduce the amount of re-rendering occurring due to user typing or value changing. Components mount to the page is much quicker as well because they are not controlled. For mounting speed, I have completed a quick comparison test which you can refer to by"," ",n.createElement("a",{href:"https://github.com/bluebill1049/react-hook-form-performance-compare",target:"_blank",rel:"noopener noreferrer"},"this repo link"),".")},{title:"How to create an accessible input error and message?",description:n.createElement("p",null,"React Hook Form is based on"," ",n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",rel:"noopener noreferrer",target:"_blank"},"Uncontrolled Component"),", which gives you the ability to build an accessible custom form easily.")},{title:"Does it work with Class Components?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"No, not out of box. but you can build a wrapper around it and use in your Class Component."),n.createElement("blockquote",null,"You can’t use Hooks inside of a class component, but you can definitely mix classes and function components with Hooks in a single tree. Whether a component is a class or a function that uses Hooks is an implementation detail of that component. In the longer term, we expect Hooks to be the primary way people write React components."))},{title:"How to reset the form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"There are two methods to clear the form."),n.createElement("ul",null,n.createElement("li",null,n.createElement("b",null,"HTMLFormElement.reset()"),n.createElement("p",null,"This method does the same thing as clicking a form's reset button, and only clears",n.createElement("code",null,"input/select/checkbox")," values.")),n.createElement("li",null,n.createElement("b",null,"React Hook Form API: ",n.createElement("code",null,"reset()")),n.createElement("p",null,"React Hook Form's ",n.createElement("code",null,"reset")," method will reset all fields value, and also will clear all ",n.createElement("code",null,"errors")," within the form."))))},{title:"How to initialize form values?",description:n.createElement("p",null,"React Hook Form relies on uncontrolled component. With an uncontrolled component, you can specify a ",n.createElement("code",null,"defaultValue")," or"," ",n.createElement("code",null,"defaultChecked")," to an individual field. However, the hook itself does provide an easier way to initialise all input values too. Example below:")},{title:"How to share ref usage?",description:n.createElement("p",null,"React Hook Form needs ",n.createElement("code",null,"ref")," to collect the input value, however, you may want to use ",n.createElement("code",null,"ref")," for other purposes (eg. scroll into the view). The following example will show you how.")},{title:"What if you don't have access to ref?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"You can actually ",n.createElement("code",null,"register")," an input without a"," ",n.createElement("code",null,"ref"),". In fact, you can manually ",n.createElement("code",null,"setValue"),","," ",n.createElement("code",null,"setError")," and ",n.createElement("code",null,"triggerValidation"),"."),n.createElement("p",null,n.createElement("b",{className:d.a.note},"Note:")," Because"," ",n.createElement("code",null,"ref")," has not been registered, React Hook Form won't be able to register event listeners to the inputs. This means you will have to manually update value and error."))},{title:"Browser Support?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form support all major browsers."),n.createElement("p",null,"For legacy IE11 support, you can import react-hook-form IE 11 version."))},{title:"Why is first keystroke is not working?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Double check if you are using ",n.createElement("code",null,"value")," instead of"," ",n.createElement("code",null,"defaultValue"),"."),n.createElement("p",null,"React Hook Form is built based on uncontrolled input, which means you don't need to change input ",n.createElement("code",null,"value")," via"," ",n.createElement("code",null,"state")," by ",n.createElement("code",null,"onChange"),". Hence you don't need"," ",n.createElement("code",null,"value")," at all, in fact, you only need"," ",n.createElement("code",null,"defaultValue")," for initial input value."))},{title:"Testing failed due to MutationObserver?",description:n.createElement("p",null,"If you have difficulty during testing and the issue was caused by"," ",n.createElement("code",null,"MutationObserver"),". Make sure you install"," ",n.createElement("code",null,"mutationobserver")," and import this package in your test"," ",n.createElement("a",{href:"https://jestjs.io/docs/en/configuration",target:"_blank",rel:"noopener noreferrer"},"setup.js file"),".")},{title:"React Hook Form, Formik or Redux Form?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"First of all, all libs try to solve the same problem which is making form building experience easy and great. However, there are some fundamental differences between the three, react-hook-form is built with uncontrolled input in mind and tries to provide your form with best performance and least re-render if possible. On top of that, react-hook-form is built by React Hook and used as hook, which means there is no Component for you to import. Here are some of the detail differences:"),n.createElement("div",{className:E.a.tableWrapper},n.createElement("table",{className:E.a.table},n.createElement("thead",null,n.createElement("tr",{style:{borderBottom:"1px solid "+i.a.lightPink}},n.createElement("th",{width:200}),n.createElement("th",null,n.createElement("p",null,"React Hook Form")),n.createElement("th",null,n.createElement("p",null,"Formik")),n.createElement("th",null,n.createElement("p",null,"Redux Form")))),n.createElement("tbody",null,n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Component")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/uncontrolled-components.html",target:"_blank"},"uncontrolled")," ","&"," ",n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled")),n.createElement("td",null,n.createElement("a",{href:"https://reactjs.org/docs/forms.html",target:"_blank"},"controlled"))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Rendering")),n.createElement("td",null,"minimum re-render"),n.createElement("td",null,"re-render according to local state changes which means as you type in the input."),n.createElement("td",null,"re-render according to state management lib (Redux) changes which means as you type in the input.")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"API")),n.createElement("td",null,"Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field) + Hooks"),n.createElement("td",null,"Component (RenderProps, Form, Field)")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Package size")),n.createElement("td",null,"Small",n.createElement("br",null),n.createElement("code",null,"react-hook-form@4.0.0",n.createElement("br",null),n.createElement("b",{className:d.a.note},"6.2KB"))),n.createElement("td",null,"Medium",n.createElement("br",null),n.createElement("code",null,"formik@2.0.1",n.createElement("br",null),n.createElement("b",{className:d.a.note},"14.4KB"))),n.createElement("td",null,"Large",n.createElement("br",null),n.createElement("code",null,"redux-form@8.2.6",n.createElement("br",null),n.createElement("b",{className:d.a.note},"27KB")))),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Validation")),n.createElement("td",null,"Built-in &"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or"," ",n.createElement("a",{href:"https://github.com/jquense/yup",target:"_blank"},"Yup")),n.createElement("td",null,"Build yourself or Plugins")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Learning curve")),n.createElement("td",null,"Low"),n.createElement("td",null,"Medium"),n.createElement("td",null,"Medium")),n.createElement("tr",null,n.createElement("td",null,n.createElement("b",null,"Status")),n.createElement("td",null,"Medium Community: New lib and growing"),n.createElement("td",null,"Large Community: Well established form lib in the community"),n.createElement("td",null,"Large Community: Well established form lib in the community"))))))},{title:"Can it work with Controlled component?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"Short answer: ",n.createElement("b",null,"Yes")),n.createElement("p",null,"React-hook-form is not recommending you to build form controlled, however you can still achieve that easily."),n.createElement("p",null,"The trick to using ",n.createElement("code",null,"watch")," API to monitor each input's change and assign to value prop."),n.createElement("p",null,"Alternatively, you can use our wrapper component"," ",n.createElement("a",{href:"https://www.react-hook-form.com/api#Controller"},'title="React Hook Form Controller Controller')," ","which take care those custom register for you."))},{title:"Testing React Hook Form",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,"Why am I getting ",n.createElement("code",null,"act")," warning?"),n.createElement("p",null,"All validation methods in React Hook Form will be treated as async functions, so it's important to wrap ",n.createElement("code",null,"async")," ","around your"," ",n.createElement("a",{className:f.a.codeAsLink,href:"https://reactjs.org/docs/test-utils.html#act",target:"_blank",rel:"noopener noreferrer"},"act"),".")),n.createElement("li",null,n.createElement("p",null,"Why input change is not fire event?"),n.createElement("p",null,"React Hook Form using ",n.createElement("code",null,"input")," event for input change, so to fix it. you can easily switch to"," ",n.createElement("code",null,"fireEvent.input")," for react-testing-library"))))},{title:"watch vs getValues vs state",description:n.createElement("div",null,n.createElement("ul",null,n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note},"watch:"),"Подписаться на изменение входных данных через прослушиватель событий и повторное рендеринг, какой вход смотрел / подписался. проверять, выписываться"," ",n.createElement("a",{href:"https://codesandbox.io/s/react-hook-form-watch-with-radio-buttons-and-select-examples-ovfus",rel:"noopener noreferrer",target:"_blank"},"codesandbox"),"за реальное поведение.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note},"getValues"),": получить значение который хранится внутри пользовательского крючка в качестве ссылки, быстро и дешево. Этот метод не запускает повторную визуализацию.")),n.createElement("li",null,n.createElement("p",null,n.createElement("b",{className:d.a.note},"local state"),": Реагировать местный состояние представляет собой нечто большее, чем просто состояние ввода, а также решает, что оказывать. Это будет срабатывать при изменении каждого входа."))))},{title:"Why is default value not changing correctly with ternary operator?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"React Hook Form не контролирует всю вашу форму и входные данные, которые является причиной, почему React не распознает фактический вклад, который имеет были обменены или отпущены. Как решение, вы можете решить эту проблему проблема, предоставляя уникальный ввод"," ",n.createElement("code",null," key ")," для вашего ввода. Вы также можете прочитать больше о ключевых реквизитах от ","",n.createElement("a",{target:"_blank",rel:"noopener noreferrer",href:"https://kentcdodds.com/blog/understanding-reacts-key-prop"},"эта статья написана Kent C. Dodds"),"."),n.createElement(a.b,{rawData:g.a,url:"https://codesandbox.io/s/react-hook-form-faq-toggle-fields-4mp39"}))},{title:"Controller not working with submitFocusError?",description:n.createElement(n.Fragment,null,n.createElement("p",null,"После ошибки проверки React Hook Form автоматически сфокусируется на инвалидов, элементы которых имеют свои соответствующие ссылки, такие как нативные входы (например: ",n.createElement("code",null,"<input />"),") или некоторые сторонние Компоненты, которые правильно экспортируют его ссылку (например: из MUI",n.createElement("code",null,"<TextField inputRef = {register ({обязательно: 'поле обязательно для заполнения'})} />"),")"),n.createElement("p",null,"Однако для некоторых сторонних контролируемых компонентов, таких как",n.createElement("code",null,"<Автозаполнение>")," из MUI или ",n.createElement("code",null,"<XX>"),"от AntD) очень трудно предсказать его рефери, потому что изменения форматов, поэтому React Hook Form правильно обнаружит ошибка проверки, но не сможет автоматически вид компонентов."),n.createElement("p",null,"Как обходной путь, после ошибки проверки вы можете вручную сфокусироваться на сторонний контролируемый компонент (если вы можете получить фактический внутренний вход ref), например:"),n.createElement(a.b,{rawData:b.a}),n.createElement("p",null,"Если вам сложно сделать автофокус с внешним управлением компонент. Есть возможность отключить «автофокус при ошибке» особенность. Может быть, такое поведение принесет лучший пользовательский опыт в некоторые случаи.",n.createElement("code",null," ","useForm ({submitFocusError: false});"," ")))}]},q={en:u.a,es:k,pt:y.a,kr:w.a,jp:F.a,zh:v.a,ru:R},H=l("7XWO"),C=l("Ejux"),x=l("QkAT"),N=l("Kcv2"),j=l.n(N),I=l("9QH1"),T=l.n(I),A=l("pCax"),S=l.n(A),_=n.useRef,P=q.en.questions;t.a=function(e){var t,l=e.defaultLang,u=Object(H.c)(),i=u.state,s=u.state.language,p=null==i||null===(t=i.setting)||void 0===t?void 0:t.lightMode,E=(s&&s.currentLanguage?s:{currentLanguage:l}).currentLanguage,h=q[E],f=h.questions,b=_({question0:null,question1:null,question2:null,question3:null,question4:null,question5:null,question6:null,question7:null,question8:null,question9:null,question10:null,question11:null,question12:null,question13:null,question14:null,question15:null}),g=function(e){var t=e.replace(/[^\w\s]| /g,""),l=P.findIndex((function(e){return e.title.replace(/[^\w\s]| /g,"").toLowerCase()===t.toLowerCase()}));b.current["question"+(l+1)]&&b.current["question"+(l+1)].scrollIntoView({behavior:"smooth"});var n=window.location.href,r=n.indexOf("#");r<0?history.pushState({},null,n+"#"+t):history.pushState({},null,n.substr(0,r)+"#"+t),l>-1&&b.current["question"+l].scrollIntoView({behavior:"smooth"})};return n.useEffect((function(){location.hash&&setTimeout((function(){return g(location.hash.substr(1))}),10)}),[]),n.createElement("div",{className:T.a.container},n.createElement("h1",{className:d.a.headingWithTopMargin,id:"main"},h.header.title),n.createElement("p",{className:d.a.subHeading},h.header.description),n.createElement("div",{className:T.a.wrapper},n.createElement(r.a,{enLinks:P,isStatic:!0,links:f,goToSection:g,currentLanguage:E}),n.createElement("main",null,n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question0=e}},h.questions[0].title),h.questions[0].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question1=e}},h.questions[1].title),h.questions[1].description,n.createElement(a.b,{rawData:'import React from "react";\nimport { useForm } from "react-hook-form";\n\nexport default function App() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        type="text"\n        aria-invalid={errors.firstName ? "true" : "false"}\n        aria-describedby="firstNameError"\n        name="firstName"\n        ref={register({ required: true })}\n      />\n      <span id="firstNameError" style={{ display: errors.firstName ? "block" : "none" }}>\n        This field is required\n      </span>\n\n      <input type="submit" />\n    </form>\n  );\n}'}),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question2=e}},h.questions[2].title),h.questions[2].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question3=e}},h.questions[3].title),h.questions[3].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question4=e}},h.questions[4].title),h.questions[4].description,n.createElement(a.b,{rawData:'import React from "react";\nimport { useForm } from "react-hook-form";\n\nexport default function App() {\n  const { register, handleSubmit } = useForm({\n    defaultValues: {\n      firstName: "bill",\n      lastName: "luo",\n      email: "bluebill1049@hotmail.com"\n    }\n  });\n  const onSubmit = data => alert(JSON.stringify(data));\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input name="firstName" ref={register} />\n      <input name="lastName" ref={register} />\n      <input name="email" ref={register} />\n\n      <button type="submit">Submit</button>\n    </form>\n  );\n}'}),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question5=e}},h.questions[5].title),h.questions[5].description,n.createElement(a.b,{rawData:'import React, { useRef } from "react";\nimport { useForm } from "react-hook-form";\n\nexport default function App() {\n  const { register, handleSubmit } = useForm();\n  const firstNameRef = useRef();\n  const onSubmit = data => alert(JSON.stringify(data));\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input name="firstName" ref={(e) => {\n        register(e)\n        firstNameRef.current = e // you can still assign to ref\n      }} />\n      <input name="lastName" ref={(e) => {\n        // register\'s first argument is ref, and second is validation rules\n        register(e, { required: true })\n      }} />\n\n      <button>Submit</button>\n    </form>\n  );\n}',tsRawData:'import React, { useRef } from "react";\nimport { useForm } from "react-hook-form";\n\ntype Inputs = {\n  firstName: string,\n  lastName: string,\n};\n\nexport default function App() {\n  const { register, handleSubmit } = useForm<Inputs>();\n  const firstNameRef = useRef<HTMLInputElement | null>(null);\n  const onSubmit = data => alert(JSON.stringify(data));\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input name="firstName" ref={(e) => {\n        register(e)\n        firstNameRef.current = e // you can still assign to ref\n      }} />\n      <input name="lastName" ref={(e) => {\n        // register\'s first argument is ref, and second is validation rules\n        register(e, { required: true })\n      }} />\n\n      <button>Submit</button>\n    </form>\n  );\n}'}),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question6=e}},h.questions[6].title),h.questions[6].description,n.createElement(a.b,{rawData:'import React, { useEffect } from "react";\nimport { useForm } from "react-hook-form";\n\nexport default function App() {\n  const { register, handleSubmit, setValue, setError } = useForm();\n  const onSubmit = data => alert(JSON.stringify(data));\n\n  useEffect(() => {\n    register({ name: "firstName" }, { required: true });\n    register({ name: "lastName" });\n  }, []);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        name="firstName"\n        onChange={e => setValue("firstName", e.target.value)}\n      />\n      <input\n        name="lastName"\n        onChange={e => {\n          const value = e.target.value;\n          if (value === "test") {\n            setError("lastName", "notMatch")\n          } else {\n            setValue("lastName", e.target.value)\n          }\n        }}\n      />\n      <button>Submit</button>\n    </form>\n  );\n}\n'}),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question7=e}},h.questions[7].title),h.questions[7].description,n.createElement(a.b,{rawData:"import { useForm } from 'react-hook-form/dist/react-hook-form.ie11'",withOutCopy:!0}),n.createElement("p",null,"If you encounter: "),n.createElement("blockquote",null," ","Object doesn't support property or method 'find'"),n.createElement("p",null,"You should try to add this"," ",n.createElement("a",{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find#Polyfill"},"find polyfill")," ","to the top of your app.js"),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question8=e}},h.questions[8].title),h.questions[8].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question9=e}},h.questions[9].title),h.questions[9].description,n.createElement("span",{className:S.a.installCode+" "+(p?S.a.lightInstallCode:"")},"npm i mutationobserver-shim",n.createElement("button",{className:S.a.copyButton,onClick:function(){Object(c.a)("npm i mutationobserver-shim"),alert("Code copied into your clipboard.")}},n.createElement("span",{className:j.a.copyIcon},n.createElement("span",null))," ","Copy")),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question10=e}},h.questions[10].title),h.questions[10].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question11=e}},h.questions[11].title),h.questions[11].description,n.createElement(C.a,{buttonLabels:["Controller","Custom Register"]},n.createElement(a.b,{rawData:x.a}),n.createElement(a.b,{rawData:'import React, { useEffect } from "react";\nimport { useForm } from "react-hook-form";\n\nfunction App() {\n  const { register, watch, setValue, handleSubmit } = useForm({\n    defaultValues: {\n      firstName: "",\n      lastName: ""\n    }\n  });\n  const { firstName, lastName } = watch();\n\n  useEffect(() => {\n    register({ name: "firstName" });\n    register({ name: "lastName" });\n  }, [register]);\n\n  const handleChange = (name, e) => {\n    e.persist();\n    setValue(name, e.target.value);\n  };\n\n  const onSubmit = data => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input\n        onChange={handleChange.bind(null, "firstName")}\n        value={firstName}\n      />\n\n      <input onChange={handleChange.bind(null, "lastName")} value={lastName} />\n      <input type="submit" />\n    </form>\n  );\n}\n',url:"https://codesandbox.io/s/react-hook-form-controlled-input-gr478"})),n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question12=e}},h.questions[12].title),h.questions[12].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question13=e}},h.questions[13].title),h.questions[13].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question14=e}},h.questions[14].title),h.questions[14].description,n.createElement("hr",null),n.createElement("h2",{className:d.a.questionTitle,ref:function(e){return b.current.question15=e}},h.questions[15].title),h.questions[15].description,n.createElement(m.a,{currentLanguage:E}),n.createElement(o.a,{currentLanguage:E}))))}}}]);
//# sourceMappingURL=a29a340985165547e8c69fecf695b2dac29051ed-c47fcecf25c5b0aa6d74.js.map