{"version":3,"sources":["webpack:///./src/pages/index.en.tsx","webpack:///./src/components/Headerr.tsx","webpack:///./src/components/HomeePage.tsx"],"names":["IndexPage","location","defaultLang","title","homee","en","description","LogoSvg","d","style","transform","Header","homeRef","React","language","useStateMachine","state","currentLanguage","play","className","styles","head","id","sequenceIndex","duration","start","opacity","end","easeType","render","logo","viewBox","typographyStyles","heading","logoHeading","desktopLogo","subHeading","marginBottom","maxWidth","home","slogan","buttonStyles","buttonsGroup","minWidth","primaryButton","onClick","current","scrollIntoView","behavior","demo","navigate","translateLink","getStarted","useState","useRef","useEffect","options","rootMargin","threshold","showBuilder","toggleBuilder","HomeRef","isPlayFeature","setFeaturePlay","isPlayCodeCompare","setCodeComparePlay","isIsolatePlay","setIsolatePlay","isCardPlay","setFormUpdated","search","startsWith","setTimeout","IntersectionObserver","featureList","document","querySelector","codeComparison","isolate","observer","entries","forEach","entry","isIntersecting","target","observe","disconnect","root","FeaturesList","CodeCompareSection","IsolateRender","ref","containerStyles","centerContent","h1","findInteresting","Footer"],"mappings":"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","file":"component---src-pages-index-en-tsx-156bc9c5435f6a3a1a1c.js","sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport Homee from \"../components/HomeePage\"\nimport homee from \"../data/home\"\n\nconst IndexPage = ({\n  location,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n}) => (\n  <Layout location={location} defaultLang=\"en\">\n    <Seo\n      title={homee.title.en}\n      description={homee.description.en}\n      location={location}\n    />\n    <Homee location={location} defaultLang=\"en\" />\n  </Layout>\n)\n\nexport default IndexPage\n","import * as React from \"react\"\nimport { Animate, AnimateGroup } from \"react-simple-animate\"\nimport { navigate } from \"@reach/router\"\n// @ts-ignore\nimport home from \"../data/home\"\nimport { useStateMachine } from \"little-state-machine\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./Header.module.css\"\n\nconst LogoSvg = (\n  <>\n    <path d=\"M73.56,13.32H58.14a8.54,8.54,0,0,0-16.27,0H26.44a11,11,0,0,0-11,11V81.63a11,11,0,0,0,11,11H73.56a11,11,0,0,0,11-11V24.32A11,11,0,0,0,73.56,13.32Zm-30.92,2a1,1,0,0,0,1-.79,6.54,6.54,0,0,1,12.78,0,1,1,0,0,0,1,.79h5.38v6.55a3,3,0,0,1-3,3H40.25a3,3,0,0,1-3-3V15.32ZM82.56,81.63a9,9,0,0,1-9,9H26.44a9,9,0,0,1-9-9V24.32a9,9,0,0,1,9-9h8.81v6.55a5,5,0,0,0,5,5h19.5a5,5,0,0,0,5-5V15.32h8.81a9,9,0,0,1,9,9Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.6,45.92H54a1,1,0,0,0,0,2H71.6a1,1,0,0,0,0-2Z\" />\n    <path\n      style={{ transform: \"translateX(-25px)\" }}\n      d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\"\n    />\n    <path d=\"M71.1,69.49H53.45a1,1,0,1,0,0,2H71.1a1,1,0,0,0,0-2Z\" />\n  </>\n)\n\nexport default function Header({\n  homeRef,\n  defaultLang,\n}: // isCardPlay,\n{\n  homeRef: React.Ref<HTMLDivElement>\n  defaultLang: string\n  // isCardPlay: boolean\n}) {\n  const [isWeb, setIsWeb] = React.useState(true)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  return (\n    <>\n      <AnimateGroup play>\n        <header className={styles.head} id=\"main\">\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <svg className={styles.logo} style={style} viewBox=\"0 0 100 100\">\n                {LogoSvg}\n              </svg>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={0}\n            duration={0.2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <h1\n                className={`${typographyStyles.heading} ${styles.logoHeading}`}\n                style={style}\n              >\n                <svg className={styles.desktopLogo} viewBox=\"0 0 100 100\">\n                  {LogoSvg}\n                </svg>{\" \"}\n                React Hook Form\n              </h1>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={1}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <p\n                className={typographyStyles.subHeading}\n                style={{ marginBottom: 0, maxWidth: 660, ...style }}\n              >\n                {home.slogan[currentLanguage]}\n              </p>\n            )}\n          />\n\n          <Animate\n            sequenceIndex={2}\n            start={{\n              transform: \"translateY(20px)\",\n              opacity: 0,\n            }}\n            end={{\n              transform: \"translateY(0)\",\n            }}\n            easeType=\"ease-in\"\n            render={({ style }) => (\n              <div\n                className={buttonStyles.buttonsGroup}\n                style={{\n                  ...style,\n                  minWidth: 300,\n                }}\n              >\n                <button\n                  className={buttonStyles.primaryButton}\n                  onClick={() => {\n                    // @ts-ignore\n                    homeRef.current.scrollIntoView({ behavior: \"smooth\" })\n                  }}\n                >\n                  {home.demo[currentLanguage]}\n                </button>\n\n                <button\n                  className={buttonStyles.primaryButton}\n                  onClick={() => {\n                    navigate(translateLink(\"get-started\", currentLanguage))\n                  }}\n                >\n                  {home.getStarted[currentLanguage]} &nbsp;<span>▶</span>\n                </button>\n              </div>\n            )}\n          />\n        </header>\n      </AnimateGroup>\n\n      {/*<Bday isCardPlay={isCardPlay} />*/}\n    </>\n  )\n}\n","import * as React from \"react\"\nimport { navigate } from \"@reach/router\"\nimport Form from \"./Form\"\nimport Headerr from \"./Headerr\"\nimport CodeCompareSection from \"./CodeCompareSection\"\nimport CodePerfCompareSection from \"./CodePerfCompareSection\"\nimport IsolateRender from \"./IsolateRender\"\nimport FooterContent from \"./Footer\"\nimport Builder from \"./BuilderPage\"\nimport FeaturesList from \"./FeaturesList\"\nimport { useStateMachine } from \"little-state-machine\"\nimport home from \"../data/home\"\nimport translateLink from \"./logic/translateLink\"\nimport typographyStyles from \"../styles/typography.module.css\"\nimport containerStyles from \"../styles/container.module.css\"\nimport buttonStyles from \"../styles/button.module.css\"\nimport styles from \"./HomePage.module.css\"\n\nconst { useState, useRef, useEffect } = React\n\nconst options = {\n  rootMargin: \"0px 0px\",\n  threshold: [1],\n}\n\nfunction HomePage({\n  location,\n  defaultLang,\n}: {\n  location: {\n    search: string\n    pathname: string\n  }\n  defaultLang: string\n}) {\n  const [submitData, updateSubmitData] = useState({})\n  const [showBuilder, toggleBuilder] = useState(false)\n  const HomeRef = useRef(null)\n  const [isPlayFeature, setFeaturePlay] = useState(false)\n  const [isPlayCodeCompare, setCodeComparePlay] = useState(false)\n  const [isIsolatePlay, setIsolatePlay] = useState(false)\n  const [isCardPlay, setCardPlay] = useState(false)\n  const [isPlayRender, setRenderPlay] = useState(false)\n  const [formUpdated, setFormUpdated] = useState(false)\n  const {\n    state: { language },\n  } = useStateMachine()\n  const { currentLanguage } =\n    language && language.currentLanguage\n      ? language\n      : { currentLanguage: defaultLang }\n\n  const onSubmit = (data) => {\n    updateSubmitData(data)\n  }\n\n  useEffect(() => {\n    if (location.search.startsWith(\"?goToDemo\")) {\n      setTimeout(() => {\n        HomeRef.current.scrollIntoView({ behavior: \"smooth\" })\n\n        if (location.search.startsWith(\"?goToDemo&updated=true\")) {\n          setFormUpdated(true)\n        }\n      }, 100)\n    }\n\n    if (!IntersectionObserver) {\n      setFeaturePlay(true)\n      setCodeComparePlay(true)\n    }\n\n    const featureList = document.querySelector(\"#featureLast\")\n    const codeComparison = document.querySelector(\"#codeComparison\")\n    const rendering = document.querySelector(\"#rendering\")\n    const isolate = document.querySelector(\"#isolate\")\n    const card = document.querySelector(\"#card\")\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          if (entry.target === featureList && !isPlayFeature) {\n            setFeaturePlay(true)\n          }\n          if (entry.target === codeComparison && !isPlayCodeCompare) {\n            setCodeComparePlay(true)\n          }\n          // if (entry.target === rendering && !isPlayRender) {\n          //   setRenderPlay(true)\n          // }\n          if (entry.target === isolate && !isIsolatePlay) {\n            setIsolatePlay(true)\n          }\n          // if (entry.target === card && !isCardPlay) {\n          //   setCardPlay(true)\n          // }\n        }\n      })\n    }, options)\n\n    observer.observe(featureList)\n    observer.observe(codeComparison)\n    // observer.observe(rendering)\n    observer.observe(isolate)\n    // observer.observe(card)\n\n    return () => observer.disconnect()\n  }, [])\n\n  return (\n    <div className={styles.root}>\n      {showBuilder && (\n        <Builder\n          showBuilder\n          toggleBuilder={toggleBuilder}\n          HomeRef={HomeRef}\n          defaultLang={defaultLang}\n        />\n      )}\n\n      <Headerr\n        isCardPlay={isCardPlay}\n        homeRef={HomeRef}\n        defaultLang={defaultLang}\n      />\n\n      <FeaturesList\n        isPlayFeature={isPlayFeature}\n        currentLanguage={currentLanguage}\n      />\n\n      <CodeCompareSection\n        isPlayCodeCompare={isPlayCodeCompare}\n        currentLanguage={currentLanguage}\n      />\n\n      <IsolateRender\n        isIsolatePlay={isIsolatePlay}\n        currentLanguage={currentLanguage}\n      />\n\n      <div ref={HomeRef} />\n\n      <section className={containerStyles.centerContent}>\n        <h1 className={typographyStyles.h1}>\n          {home.findInteresting[currentLanguage].heading}\n        </h1>\n        <p>{home.findInteresting[currentLanguage].description}</p>\n        <div\n          className={buttonStyles.buttonsGroup}\n          style={{\n            maxWidth: 500,\n          }}\n        >\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"get-started\", currentLanguage))\n            }}\n          >\n            {home.getStarted[currentLanguage]}\n          </button>\n          <button\n            className={buttonStyles.primaryButton}\n            onClick={() => {\n              navigate(translateLink(\"api\", currentLanguage))\n            }}\n          >\n            API\n          </button>\n        </div>\n      </section>\n\n      <FooterContent currentLanguage={currentLanguage} />\n    </div>\n  )\n}\n\nexport default React.memo(HomePage)\n"],"sourceRoot":""}